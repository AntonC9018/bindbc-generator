
module bindbc.cimgui.funcs;
import bindbc.cimgui.types;
import core.stdc.stdarg:va_list;

extern(C) @nogc nothrow
{
	alias da_ImVec2_ImVec2Nil = ImVec2* function ();
	alias da_ImVec2_destroy = void function (ImVec2* self);
	alias da_ImVec2_ImVec2Float = ImVec2* function (float _x,float _y);
	alias da_ImVec4_ImVec4Nil = ImVec4* function ();
	alias da_ImVec4_destroy = void function (ImVec4* self);
	alias da_ImVec4_ImVec4Float = ImVec4* function (float _x,float _y,float _z,float _w);
	alias da_igCreateContext = ImGuiContext* function (ImFontAtlas* shared_font_atlas);
	alias da_igDestroyContext = void function (ImGuiContext* ctx);
	alias da_igGetCurrentContext = ImGuiContext* function ();
	alias da_igSetCurrentContext = void function (ImGuiContext* ctx);
	alias da_igGetIO = ImGuiIO* function ();
	alias da_igGetStyle = ImGuiStyle* function ();
	alias da_igNewFrame = void function ();
	alias da_igEndFrame = void function ();
	alias da_igRender = void function ();
	alias da_igGetDrawData = ImDrawData* function ();
	alias da_igShowDemoWindow = void function (bool* p_open);
	alias da_igShowAboutWindow = void function (bool* p_open);
	alias da_igShowMetricsWindow = void function (bool* p_open);
	alias da_igShowStyleEditor = void function (ImGuiStyle* ref_);
	alias da_igShowStyleSelector = bool function (const (char)* label);
	alias da_igShowFontSelector = void function (const (char)* label);
	alias da_igShowUserGuide = void function ();
	alias da_igGetVersion = const (char)* function ();
	alias da_igStyleColorsDark = void function (ImGuiStyle* dst);
	alias da_igStyleColorsClassic = void function (ImGuiStyle* dst);
	alias da_igStyleColorsLight = void function (ImGuiStyle* dst);
	alias da_igBegin = bool function (const (char)* name,bool* p_open,ImGuiWindowFlags flags);
	alias da_igEnd = void function ();
	alias da_igBeginChildStr = bool function (const (char)* str_id,const ImVec2 size,bool border,ImGuiWindowFlags flags);
	alias da_igBeginChildID = bool function (ImGuiID id,const ImVec2 size,bool border,ImGuiWindowFlags flags);
	alias da_igEndChild = void function ();
	alias da_igIsWindowAppearing = bool function ();
	alias da_igIsWindowCollapsed = bool function ();
	alias da_igIsWindowFocused = bool function (ImGuiFocusedFlags flags);
	alias da_igIsWindowHovered = bool function (ImGuiHoveredFlags flags);
	alias da_igGetWindowDrawList = ImDrawList* function ();
	alias da_igGetWindowDpiScale = float function ();
	alias da_igGetWindowViewport = ImGuiViewport* function ();
	alias da_igGetWindowPos = void function (ImVec2 *pOut);
	alias da_igGetWindowSize = void function (ImVec2 *pOut);
	alias da_igGetWindowWidth = float function ();
	alias da_igGetWindowHeight = float function ();
	alias da_igSetNextWindowPos = void function (const ImVec2 pos,ImGuiCond cond,const ImVec2 pivot);
	alias da_igSetNextWindowSize = void function (const ImVec2 size,ImGuiCond cond);
	alias da_igSetNextWindowSizeConstraints = void function (const ImVec2 size_min,const ImVec2 size_max,ImGuiSizeCallback custom_callback,void* custom_callback_data);
	alias da_igSetNextWindowContentSize = void function (const ImVec2 size);
	alias da_igSetNextWindowCollapsed = void function (bool collapsed,ImGuiCond cond);
	alias da_igSetNextWindowFocus = void function ();
	alias da_igSetNextWindowBgAlpha = void function (float alpha);
	alias da_igSetNextWindowViewport = void function (ImGuiID viewport_id);
	alias da_igSetWindowPosVec2 = void function (const ImVec2 pos,ImGuiCond cond);
	alias da_igSetWindowSizeVec2 = void function (const ImVec2 size,ImGuiCond cond);
	alias da_igSetWindowCollapsedBool = void function (bool collapsed,ImGuiCond cond);
	alias da_igSetWindowFocusNil = void function ();
	alias da_igSetWindowFontScale = void function (float scale);
	alias da_igSetWindowPosStr = void function (const (char)* name,const ImVec2 pos,ImGuiCond cond);
	alias da_igSetWindowSizeStr = void function (const (char)* name,const ImVec2 size,ImGuiCond cond);
	alias da_igSetWindowCollapsedStr = void function (const (char)* name,bool collapsed,ImGuiCond cond);
	alias da_igSetWindowFocusStr = void function (const (char)* name);
	alias da_igGetContentRegionMax = void function (ImVec2 *pOut);
	alias da_igGetContentRegionAvail = void function (ImVec2 *pOut);
	alias da_igGetWindowContentRegionMin = void function (ImVec2 *pOut);
	alias da_igGetWindowContentRegionMax = void function (ImVec2 *pOut);
	alias da_igGetWindowContentRegionWidth = float function ();
	alias da_igGetScrollX = float function ();
	alias da_igGetScrollY = float function ();
	alias da_igGetScrollMaxX = float function ();
	alias da_igGetScrollMaxY = float function ();
	alias da_igSetScrollXFloat = void function (float scroll_x);
	alias da_igSetScrollYFloat = void function (float scroll_y);
	alias da_igSetScrollHereX = void function (float center_x_ratio);
	alias da_igSetScrollHereY = void function (float center_y_ratio);
	alias da_igSetScrollFromPosXFloat = void function (float local_x,float center_x_ratio);
	alias da_igSetScrollFromPosYFloat = void function (float local_y,float center_y_ratio);
	alias da_igPushFont = void function (ImFont* font);
	alias da_igPopFont = void function ();
	alias da_igPushStyleColorU32 = void function (ImGuiCol idx,ImU32 col);
	alias da_igPushStyleColorVec4 = void function (ImGuiCol idx,const ImVec4 col);
	alias da_igPopStyleColor = void function (int count);
	alias da_igPushStyleVarFloat = void function (ImGuiStyleVar idx,float val);
	alias da_igPushStyleVarVec2 = void function (ImGuiStyleVar idx,const ImVec2 val);
	alias da_igPopStyleVar = void function (int count);
	alias da_igGetStyleColorVec4 = const ImVec4* function (ImGuiCol idx);
	alias da_igGetFont = ImFont* function ();
	alias da_igGetFontSize = float function ();
	alias da_igGetFontTexUvWhitePixel = void function (ImVec2 *pOut);
	alias da_igGetColorU32Col = ImU32 function (ImGuiCol idx,float alpha_mul);
	alias da_igGetColorU32Vec4 = ImU32 function (const ImVec4 col);
	alias da_igGetColorU32U32 = ImU32 function (ImU32 col);
	alias da_igPushItemWidth = void function (float item_width);
	alias da_igPopItemWidth = void function ();
	alias da_igSetNextItemWidth = void function (float item_width);
	alias da_igCalcItemWidth = float function ();
	alias da_igPushTextWrapPos = void function (float wrap_local_pos_x);
	alias da_igPopTextWrapPos = void function ();
	alias da_igPushAllowKeyboardFocus = void function (bool allow_keyboard_focus);
	alias da_igPopAllowKeyboardFocus = void function ();
	alias da_igPushButtonRepeat = void function (bool repeat);
	alias da_igPopButtonRepeat = void function ();
	alias da_igSeparator = void function ();
	alias da_igSameLine = void function (float offset_from_start_x,float spacing);
	alias da_igNewLine = void function ();
	alias da_igSpacing = void function ();
	alias da_igDummy = void function (const ImVec2 size);
	alias da_igIndent = void function (float indent_w);
	alias da_igUnindent = void function (float indent_w);
	alias da_igBeginGroup = void function ();
	alias da_igEndGroup = void function ();
	alias da_igGetCursorPos = void function (ImVec2 *pOut);
	alias da_igGetCursorPosX = float function ();
	alias da_igGetCursorPosY = float function ();
	alias da_igSetCursorPos = void function (const ImVec2 local_pos);
	alias da_igSetCursorPosX = void function (float local_x);
	alias da_igSetCursorPosY = void function (float local_y);
	alias da_igGetCursorStartPos = void function (ImVec2 *pOut);
	alias da_igGetCursorScreenPos = void function (ImVec2 *pOut);
	alias da_igSetCursorScreenPos = void function (const ImVec2 pos);
	alias da_igAlignTextToFramePadding = void function ();
	alias da_igGetTextLineHeight = float function ();
	alias da_igGetTextLineHeightWithSpacing = float function ();
	alias da_igGetFrameHeight = float function ();
	alias da_igGetFrameHeightWithSpacing = float function ();
	alias da_igPushIDStr = void function (const (char)* str_id);
	alias da_igPushIDStrStr = void function (const (char)* str_id_begin,const (char)* str_id_end);
	alias da_igPushIDPtr = void function (const void* ptr_id);
	alias da_igPushIDInt = void function (int int_id);
	alias da_igPopID = void function ();
	alias da_igGetIDStr = ImGuiID function (const (char)* str_id);
	alias da_igGetIDStrStr = ImGuiID function (const (char)* str_id_begin,const (char)* str_id_end);
	alias da_igGetIDPtr = ImGuiID function (const void* ptr_id);
	alias da_igTextUnformatted = void function (const (char)* text,const (char)* text_end);
	alias da_igText = void function (const (char)* fmt,...);
	alias da_igTextV = void function (const (char)* fmt,va_list args);
	alias da_igTextColored = void function (const ImVec4 col,const (char)* fmt,...);
	alias da_igTextColoredV = void function (const ImVec4 col,const (char)* fmt,va_list args);
	alias da_igTextDisabled = void function (const (char)* fmt,...);
	alias da_igTextDisabledV = void function (const (char)* fmt,va_list args);
	alias da_igTextWrapped = void function (const (char)* fmt,...);
	alias da_igTextWrappedV = void function (const (char)* fmt,va_list args);
	alias da_igLabelText = void function (const (char)* label,const (char)* fmt,...);
	alias da_igLabelTextV = void function (const (char)* label,const (char)* fmt,va_list args);
	alias da_igBulletText = void function (const (char)* fmt,...);
	alias da_igBulletTextV = void function (const (char)* fmt,va_list args);
	alias da_igButton = bool function (const (char)* label,const ImVec2 size);
	alias da_igSmallButton = bool function (const (char)* label);
	alias da_igInvisibleButton = bool function (const (char)* str_id,const ImVec2 size,ImGuiButtonFlags flags);
	alias da_igArrowButton = bool function (const (char)* str_id,ImGuiDir dir);
	alias da_igImage = void function (ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,const ImVec4 tint_col,const ImVec4 border_col);
	alias da_igImageButton = bool function (ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,int frame_padding,const ImVec4 bg_col,const ImVec4 tint_col);
	alias da_igCheckbox = bool function (const (char)* label,bool* v);
	alias da_igCheckboxFlags = bool function (const (char)* label,uint* flags,uint flags_value);
	alias da_igRadioButtonBool = bool function (const (char)* label,bool active);
	alias da_igRadioButtonIntPtr = bool function (const (char)* label,int* v,int v_button);
	alias da_igProgressBar = void function (float fraction,const ImVec2 size_arg,const (char)* overlay);
	alias da_igBullet = void function ();
	alias da_igBeginCombo = bool function (const (char)* label,const (char)* preview_value,ImGuiComboFlags flags);
	alias da_igEndCombo = void function ();
	alias da_igComboStr_arr = bool function (const (char)* label,int* current_item,const (char)* items[],int items_count,int popup_max_height_in_items);
	alias da_igComboStr = bool function (const (char)* label,int* current_item,const (char)* items_separated_by_zeros,int popup_max_height_in_items);
	alias da_igComboFnBoolPtr = bool function (const (char)* label,int* current_item,bool function(void* data,int idx,const (char)** out_text) items_getter,void* data,int items_count,int popup_max_height_in_items);
	alias da_igDragFloat = bool function (const (char)* label,float* v,float v_speed,float v_min,float v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igDragFloat2 = bool function (const (char)* label,float * v,float v_speed,float v_min,float v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igDragFloat3 = bool function (const (char)* label,float * v,float v_speed,float v_min,float v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igDragFloat4 = bool function (const (char)* label,float * v,float v_speed,float v_min,float v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igDragFloatRange2 = bool function (const (char)* label,float* v_current_min,float* v_current_max,float v_speed,float v_min,float v_max,const (char)* format,const (char)* format_max,ImGuiSliderFlags flags);
	alias da_igDragInt = bool function (const (char)* label,int* v,float v_speed,int v_min,int v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igDragInt2 = bool function (const (char)* label,int * v,float v_speed,int v_min,int v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igDragInt3 = bool function (const (char)* label,int * v,float v_speed,int v_min,int v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igDragInt4 = bool function (const (char)* label,int * v,float v_speed,int v_min,int v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igDragIntRange2 = bool function (const (char)* label,int* v_current_min,int* v_current_max,float v_speed,int v_min,int v_max,const (char)* format,const (char)* format_max,ImGuiSliderFlags flags);
	alias da_igDragScalar = bool function (const (char)* label,ImGuiDataType data_type,void* p_data,float v_speed,const void* p_min,const void* p_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igDragScalarN = bool function (const (char)* label,ImGuiDataType data_type,void* p_data,int components,float v_speed,const void* p_min,const void* p_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderFloat = bool function (const (char)* label,float* v,float v_min,float v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderFloat2 = bool function (const (char)* label,float * v,float v_min,float v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderFloat3 = bool function (const (char)* label,float * v,float v_min,float v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderFloat4 = bool function (const (char)* label,float * v,float v_min,float v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderAngle = bool function (const (char)* label,float* v_rad,float v_degrees_min,float v_degrees_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderInt = bool function (const (char)* label,int* v,int v_min,int v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderInt2 = bool function (const (char)* label,int * v,int v_min,int v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderInt3 = bool function (const (char)* label,int * v,int v_min,int v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderInt4 = bool function (const (char)* label,int * v,int v_min,int v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderScalar = bool function (const (char)* label,ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderScalarN = bool function (const (char)* label,ImGuiDataType data_type,void* p_data,int components,const void* p_min,const void* p_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igVSliderFloat = bool function (const (char)* label,const ImVec2 size,float* v,float v_min,float v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igVSliderInt = bool function (const (char)* label,const ImVec2 size,int* v,int v_min,int v_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igVSliderScalar = bool function (const (char)* label,const ImVec2 size,ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igInputText = bool function (const (char)* label,char* buf,size_t buf_size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data);
	alias da_igInputTextMultiline = bool function (const (char)* label,char* buf,size_t buf_size,const ImVec2 size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data);
	alias da_igInputTextWithHint = bool function (const (char)* label,const (char)* hint,char* buf,size_t buf_size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data);
	alias da_igInputFloat = bool function (const (char)* label,float* v,float step,float step_fast,const (char)* format,ImGuiInputTextFlags flags);
	alias da_igInputFloat2 = bool function (const (char)* label,float * v,const (char)* format,ImGuiInputTextFlags flags);
	alias da_igInputFloat3 = bool function (const (char)* label,float * v,const (char)* format,ImGuiInputTextFlags flags);
	alias da_igInputFloat4 = bool function (const (char)* label,float * v,const (char)* format,ImGuiInputTextFlags flags);
	alias da_igInputInt = bool function (const (char)* label,int* v,int step,int step_fast,ImGuiInputTextFlags flags);
	alias da_igInputInt2 = bool function (const (char)* label,int * v,ImGuiInputTextFlags flags);
	alias da_igInputInt3 = bool function (const (char)* label,int * v,ImGuiInputTextFlags flags);
	alias da_igInputInt4 = bool function (const (char)* label,int * v,ImGuiInputTextFlags flags);
	alias da_igInputDouble = bool function (const (char)* label,double* v,double step,double step_fast,const (char)* format,ImGuiInputTextFlags flags);
	alias da_igInputScalar = bool function (const (char)* label,ImGuiDataType data_type,void* p_data,const void* p_step,const void* p_step_fast,const (char)* format,ImGuiInputTextFlags flags);
	alias da_igInputScalarN = bool function (const (char)* label,ImGuiDataType data_type,void* p_data,int components,const void* p_step,const void* p_step_fast,const (char)* format,ImGuiInputTextFlags flags);
	alias da_igColorEdit3 = bool function (const (char)* label,float * col,ImGuiColorEditFlags flags);
	alias da_igColorEdit4 = bool function (const (char)* label,float * col,ImGuiColorEditFlags flags);
	alias da_igColorPicker3 = bool function (const (char)* label,float * col,ImGuiColorEditFlags flags);
	alias da_igColorPicker4 = bool function (const (char)* label,float * col,ImGuiColorEditFlags flags,const float* ref_col);
	alias da_igColorButton = bool function (const (char)* desc_id,const ImVec4 col,ImGuiColorEditFlags flags,ImVec2 size);
	alias da_igSetColorEditOptions = void function (ImGuiColorEditFlags flags);
	alias da_igTreeNodeStr = bool function (const (char)* label);
	alias da_igTreeNodeStrStr = bool function (const (char)* str_id,const (char)* fmt,...);
	alias da_igTreeNodePtr = bool function (const void* ptr_id,const (char)* fmt,...);
	alias da_igTreeNodeVStr = bool function (const (char)* str_id,const (char)* fmt,va_list args);
	alias da_igTreeNodeVPtr = bool function (const void* ptr_id,const (char)* fmt,va_list args);
	alias da_igTreeNodeExStr = bool function (const (char)* label,ImGuiTreeNodeFlags flags);
	alias da_igTreeNodeExStrStr = bool function (const (char)* str_id,ImGuiTreeNodeFlags flags,const (char)* fmt,...);
	alias da_igTreeNodeExPtr = bool function (const void* ptr_id,ImGuiTreeNodeFlags flags,const (char)* fmt,...);
	alias da_igTreeNodeExVStr = bool function (const (char)* str_id,ImGuiTreeNodeFlags flags,const (char)* fmt,va_list args);
	alias da_igTreeNodeExVPtr = bool function (const void* ptr_id,ImGuiTreeNodeFlags flags,const (char)* fmt,va_list args);
	alias da_igTreePushStr = void function (const (char)* str_id);
	alias da_igTreePushPtr = void function (const void* ptr_id);
	alias da_igTreePop = void function ();
	alias da_igGetTreeNodeToLabelSpacing = float function ();
	alias da_igCollapsingHeaderTreeNodeFlags = bool function (const (char)* label,ImGuiTreeNodeFlags flags);
	alias da_igCollapsingHeaderBoolPtr = bool function (const (char)* label,bool* p_open,ImGuiTreeNodeFlags flags);
	alias da_igSetNextItemOpen = void function (bool is_open,ImGuiCond cond);
	alias da_igSelectableBool = bool function (const (char)* label,bool selected,ImGuiSelectableFlags flags,const ImVec2 size);
	alias da_igSelectableBoolPtr = bool function (const (char)* label,bool* p_selected,ImGuiSelectableFlags flags,const ImVec2 size);
	alias da_igListBoxStr_arr = bool function (const (char)* label,int* current_item,const (char)* items[],int items_count,int height_in_items);
	alias da_igListBoxFnBoolPtr = bool function (const (char)* label,int* current_item,bool function(void* data,int idx,const (char)** out_text) items_getter,void* data,int items_count,int height_in_items);
	alias da_igListBoxHeaderVec2 = bool function (const (char)* label,const ImVec2 size);
	alias da_igListBoxHeaderInt = bool function (const (char)* label,int items_count,int height_in_items);
	alias da_igListBoxFooter = void function ();
	alias da_igPlotLinesFloatPtr = void function (const (char)* label,const float* values,int values_count,int values_offset,const (char)* overlay_text,float scale_min,float scale_max,ImVec2 graph_size,int stride);
	alias da_igPlotLinesFnFloatPtr = void function (const (char)* label,float function(void* data,int idx) values_getter,void* data,int values_count,int values_offset,const (char)* overlay_text,float scale_min,float scale_max,ImVec2 graph_size);
	alias da_igPlotHistogramFloatPtr = void function (const (char)* label,const float* values,int values_count,int values_offset,const (char)* overlay_text,float scale_min,float scale_max,ImVec2 graph_size,int stride);
	alias da_igPlotHistogramFnFloatPtr = void function (const (char)* label,float function(void* data,int idx) values_getter,void* data,int values_count,int values_offset,const (char)* overlay_text,float scale_min,float scale_max,ImVec2 graph_size);
	alias da_igValueBool = void function (const (char)* prefix,bool b);
	alias da_igValueInt = void function (const (char)* prefix,int v);
	alias da_igValueUint = void function (const (char)* prefix,uint v);
	alias da_igValueFloat = void function (const (char)* prefix,float v,const (char)* float_format);
	alias da_igBeginMenuBar = bool function ();
	alias da_igEndMenuBar = void function ();
	alias da_igBeginMainMenuBar = bool function ();
	alias da_igEndMainMenuBar = void function ();
	alias da_igBeginMenu = bool function (const (char)* label,bool enabled);
	alias da_igEndMenu = void function ();
	alias da_igMenuItemBool = bool function (const (char)* label,const (char)* shortcut,bool selected,bool enabled);
	alias da_igMenuItemBoolPtr = bool function (const (char)* label,const (char)* shortcut,bool* p_selected,bool enabled);
	alias da_igBeginTooltip = void function ();
	alias da_igEndTooltip = void function ();
	alias da_igSetTooltip = void function (const (char)* fmt,...);
	alias da_igSetTooltipV = void function (const (char)* fmt,va_list args);
	alias da_igBeginPopup = bool function (const (char)* str_id,ImGuiWindowFlags flags);
	alias da_igBeginPopupModal = bool function (const (char)* name,bool* p_open,ImGuiWindowFlags flags);
	alias da_igEndPopup = void function ();
	alias da_igOpenPopup = void function (const (char)* str_id,ImGuiPopupFlags popup_flags);
	alias da_igOpenPopupContextItem = bool function (const (char)* str_id,ImGuiPopupFlags popup_flags);
	alias da_igCloseCurrentPopup = void function ();
	alias da_igBeginPopupContextItem = bool function (const (char)* str_id,ImGuiPopupFlags popup_flags);
	alias da_igBeginPopupContextWindow = bool function (const (char)* str_id,ImGuiPopupFlags popup_flags);
	alias da_igBeginPopupContextVoid = bool function (const (char)* str_id,ImGuiPopupFlags popup_flags);
	alias da_igIsPopupOpenStr = bool function (const (char)* str_id,ImGuiPopupFlags flags);
	alias da_igColumns = void function (int count,const (char)* id,bool border);
	alias da_igNextColumn = void function ();
	alias da_igGetColumnIndex = int function ();
	alias da_igGetColumnWidth = float function (int column_index);
	alias da_igSetColumnWidth = void function (int column_index,float width);
	alias da_igGetColumnOffset = float function (int column_index);
	alias da_igSetColumnOffset = void function (int column_index,float offset_x);
	alias da_igGetColumnsCount = int function ();
	alias da_igBeginTabBar = bool function (const (char)* str_id,ImGuiTabBarFlags flags);
	alias da_igEndTabBar = void function ();
	alias da_igBeginTabItem = bool function (const (char)* label,bool* p_open,ImGuiTabItemFlags flags);
	alias da_igEndTabItem = void function ();
	alias da_igSetTabItemClosed = void function (const (char)* tab_or_docked_window_label);
	alias da_igDockSpace = void function (ImGuiID id,const ImVec2 size,ImGuiDockNodeFlags flags,const ImGuiWindowClass* window_class);
	alias da_igDockSpaceOverViewport = ImGuiID function (ImGuiViewport* viewport,ImGuiDockNodeFlags flags,const ImGuiWindowClass* window_class);
	alias da_igSetNextWindowDockID = void function (ImGuiID dock_id,ImGuiCond cond);
	alias da_igSetNextWindowClass = void function (const ImGuiWindowClass* window_class);
	alias da_igGetWindowDockID = ImGuiID function ();
	alias da_igIsWindowDocked = bool function ();
	alias da_igLogToTTY = void function (int auto_open_depth);
	alias da_igLogToFile = void function (int auto_open_depth,const (char)* filename);
	alias da_igLogToClipboard = void function (int auto_open_depth);
	alias da_igLogFinish = void function ();
	alias da_igLogButtons = void function ();
	alias da_igBeginDragDropSource = bool function (ImGuiDragDropFlags flags);
	alias da_igSetDragDropPayload = bool function (const (char)* type,const void* data,size_t sz,ImGuiCond cond);
	alias da_igEndDragDropSource = void function ();
	alias da_igBeginDragDropTarget = bool function ();
	alias da_igAcceptDragDropPayload = const ImGuiPayload* function (const (char)* type,ImGuiDragDropFlags flags);
	alias da_igEndDragDropTarget = void function ();
	alias da_igGetDragDropPayload = const ImGuiPayload* function ();
	alias da_igPushClipRect = void function (const ImVec2 clip_rect_min,const ImVec2 clip_rect_max,bool intersect_with_current_clip_rect);
	alias da_igPopClipRect = void function ();
	alias da_igSetItemDefaultFocus = void function ();
	alias da_igSetKeyboardFocusHere = void function (int offset);
	alias da_igIsItemHovered = bool function (ImGuiHoveredFlags flags);
	alias da_igIsItemActive = bool function ();
	alias da_igIsItemFocused = bool function ();
	alias da_igIsItemClicked = bool function (ImGuiMouseButton mouse_button);
	alias da_igIsItemVisible = bool function ();
	alias da_igIsItemEdited = bool function ();
	alias da_igIsItemActivated = bool function ();
	alias da_igIsItemDeactivated = bool function ();
	alias da_igIsItemDeactivatedAfterEdit = bool function ();
	alias da_igIsItemToggledOpen = bool function ();
	alias da_igIsAnyItemHovered = bool function ();
	alias da_igIsAnyItemActive = bool function ();
	alias da_igIsAnyItemFocused = bool function ();
	alias da_igGetItemRectMin = void function (ImVec2 *pOut);
	alias da_igGetItemRectMax = void function (ImVec2 *pOut);
	alias da_igGetItemRectSize = void function (ImVec2 *pOut);
	alias da_igSetItemAllowOverlap = void function ();
	alias da_igIsRectVisibleNil = bool function (const ImVec2 size);
	alias da_igIsRectVisibleVec2 = bool function (const ImVec2 rect_min,const ImVec2 rect_max);
	alias da_igGetTime = double function ();
	alias da_igGetFrameCount = int function ();
	alias da_igGetBackgroundDrawListNil = ImDrawList* function ();
	alias da_igGetForegroundDrawListNil = ImDrawList* function ();
	alias da_igGetBackgroundDrawListViewportPtr = ImDrawList* function (ImGuiViewport* viewport);
	alias da_igGetForegroundDrawListViewportPtr = ImDrawList* function (ImGuiViewport* viewport);
	alias da_igGetDrawListSharedData = ImDrawListSharedData* function ();
	alias da_igGetStyleColorName = const (char)* function (ImGuiCol idx);
	alias da_igSetStateStorage = void function (ImGuiStorage* storage);
	alias da_igGetStateStorage = ImGuiStorage* function ();
	alias da_igCalcListClipping = void function (int items_count,float items_height,int* out_items_display_start,int* out_items_display_end);
	alias da_igBeginChildFrame = bool function (ImGuiID id,const ImVec2 size,ImGuiWindowFlags flags);
	alias da_igEndChildFrame = void function ();
	alias da_igCalcTextSize = void function (ImVec2 *pOut,const (char)* text,const (char)* text_end,bool hide_text_after_double_hash,float wrap_width);
	alias da_igColorConvertU32ToFloat4 = void function (ImVec4 *pOut,ImU32 in_);
	alias da_igColorConvertFloat4ToU32 = ImU32 function (const ImVec4 in_);
	alias da_igColorConvertRGBtoHSV = void function (float r,float g,float b,float* out_h,float* out_s,float* out_v);
	alias da_igColorConvertHSVtoRGB = void function (float h,float s,float v,float* out_r,float* out_g,float* out_b);
	alias da_igGetKeyIndex = int function (ImGuiKey imgui_key);
	alias da_igIsKeyDown = bool function (int user_key_index);
	alias da_igIsKeyPressed = bool function (int user_key_index,bool repeat);
	alias da_igIsKeyReleased = bool function (int user_key_index);
	alias da_igGetKeyPressedAmount = int function (int key_index,float repeat_delay,float rate);
	alias da_igCaptureKeyboardFromApp = void function (bool want_capture_keyboard_value);
	alias da_igIsMouseDown = bool function (ImGuiMouseButton button);
	alias da_igIsMouseClicked = bool function (ImGuiMouseButton button,bool repeat);
	alias da_igIsMouseReleased = bool function (ImGuiMouseButton button);
	alias da_igIsMouseDoubleClicked = bool function (ImGuiMouseButton button);
	alias da_igIsMouseHoveringRect = bool function (const ImVec2 r_min,const ImVec2 r_max,bool clip);
	alias da_igIsMousePosValid = bool function (const ImVec2* mouse_pos);
	alias da_igIsAnyMouseDown = bool function ();
	alias da_igGetMousePos = void function (ImVec2 *pOut);
	alias da_igGetMousePosOnOpeningCurrentPopup = void function (ImVec2 *pOut);
	alias da_igIsMouseDragging = bool function (ImGuiMouseButton button,float lock_threshold);
	alias da_igGetMouseDragDelta = void function (ImVec2 *pOut,ImGuiMouseButton button,float lock_threshold);
	alias da_igResetMouseDragDelta = void function (ImGuiMouseButton button);
	alias da_igGetMouseCursor = ImGuiMouseCursor function ();
	alias da_igSetMouseCursor = void function (ImGuiMouseCursor cursor_type);
	alias da_igCaptureMouseFromApp = void function (bool want_capture_mouse_value);
	alias da_igGetClipboardText = const (char)* function ();
	alias da_igSetClipboardText = void function (const (char)* text);
	alias da_igLoadIniSettingsFromDisk = void function (const (char)* ini_filename);
	alias da_igLoadIniSettingsFromMemory = void function (const (char)* ini_data,size_t ini_size);
	alias da_igSaveIniSettingsToDisk = void function (const (char)* ini_filename);
	alias da_igSaveIniSettingsToMemory = const (char)* function (size_t* out_ini_size);
	alias da_igDebugCheckVersionAndDataLayout = bool function (const (char)* version_str,size_t sz_io,size_t sz_style,size_t sz_vec2,size_t sz_vec4,size_t sz_drawvert,size_t sz_drawidx);
	alias da_igSetAllocatorFunctions = void function (void* function(size_t sz,void* user_data) alloc_func,void function(void* ptr,void* user_data) free_func,void* user_data);
	alias da_igMemAlloc = void* function (size_t size);
	alias da_igMemFree = void function (void* ptr);
	alias da_igGetPlatformIO = ImGuiPlatformIO* function ();
	alias da_igGetMainViewport = ImGuiViewport* function ();
	alias da_igUpdatePlatformWindows = void function ();
	alias da_igRenderPlatformWindowsDefault = void function (void* platform_render_arg,void* renderer_render_arg);
	alias da_igDestroyPlatformWindows = void function ();
	alias da_igFindViewportByID = ImGuiViewport* function (ImGuiID id);
	alias da_igFindViewportByPlatformHandle = ImGuiViewport* function (void* platform_handle);
	alias da_ImGuiStyle_ImGuiStyle = ImGuiStyle* function ();
	alias da_ImGuiStyle_destroy = void function (ImGuiStyle* self);
	alias da_ImGuiStyle_ScaleAllSizes = void function (ImGuiStyle* self,float scale_factor);
	alias da_ImGuiIO_AddInputCharacter = void function (ImGuiIO* self,uint c);
	alias da_ImGuiIO_AddInputCharacterUTF16 = void function (ImGuiIO* self,ImWchar16 c);
	alias da_ImGuiIO_AddInputCharactersUTF8 = void function (ImGuiIO* self,const (char)* str);
	alias da_ImGuiIO_ClearInputCharacters = void function (ImGuiIO* self);
	alias da_ImGuiIO_ImGuiIO = ImGuiIO* function ();
	alias da_ImGuiIO_destroy = void function (ImGuiIO* self);
	alias da_ImGuiInputTextCallbackData_ImGuiInputTextCallbackData = ImGuiInputTextCallbackData* function ();
	alias da_ImGuiInputTextCallbackData_destroy = void function (ImGuiInputTextCallbackData* self);
	alias da_ImGuiInputTextCallbackData_DeleteChars = void function (ImGuiInputTextCallbackData* self,int pos,int bytes_count);
	alias da_ImGuiInputTextCallbackData_InsertChars = void function (ImGuiInputTextCallbackData* self,int pos,const (char)* text,const (char)* text_end);
	alias da_ImGuiInputTextCallbackData_HasSelection = bool function (ImGuiInputTextCallbackData* self);
	alias da_ImGuiWindowClass_ImGuiWindowClass = ImGuiWindowClass* function ();
	alias da_ImGuiWindowClass_destroy = void function (ImGuiWindowClass* self);
	alias da_ImGuiPayload_ImGuiPayload = ImGuiPayload* function ();
	alias da_ImGuiPayload_destroy = void function (ImGuiPayload* self);
	alias da_ImGuiPayload_Clear = void function (ImGuiPayload* self);
	alias da_ImGuiPayload_IsDataType = bool function (ImGuiPayload* self,const (char)* type);
	alias da_ImGuiPayload_IsPreview = bool function (ImGuiPayload* self);
	alias da_ImGuiPayload_IsDelivery = bool function (ImGuiPayload* self);
	alias da_ImGuiOnceUponAFrame_ImGuiOnceUponAFrame = ImGuiOnceUponAFrame* function ();
	alias da_ImGuiOnceUponAFrame_destroy = void function (ImGuiOnceUponAFrame* self);
	alias da_ImGuiTextFilter_ImGuiTextFilter = ImGuiTextFilter* function (const (char)* default_filter);
	alias da_ImGuiTextFilter_destroy = void function (ImGuiTextFilter* self);
	alias da_ImGuiTextFilter_Draw = bool function (ImGuiTextFilter* self,const (char)* label,float width);
	alias da_ImGuiTextFilter_PassFilter = bool function (ImGuiTextFilter* self,const (char)* text,const (char)* text_end);
	alias da_ImGuiTextFilter_Build = void function (ImGuiTextFilter* self);
	alias da_ImGuiTextFilter_Clear = void function (ImGuiTextFilter* self);
	alias da_ImGuiTextFilter_IsActive = bool function (ImGuiTextFilter* self);
	alias da_ImGuiTextRange_ImGuiTextRangeNil = ImGuiTextRange* function ();
	alias da_ImGuiTextRange_destroy = void function (ImGuiTextRange* self);
	alias da_ImGuiTextRange_ImGuiTextRangeStr = ImGuiTextRange* function (const (char)* _b,const (char)* _e);
	alias da_ImGuiTextRange_empty = bool function (ImGuiTextRange* self);
	alias da_ImGuiTextRange_split = void function (ImGuiTextRange* self,char separator,ImVector_ImGuiTextRange* out_);
	alias da_ImGuiTextBuffer_ImGuiTextBuffer = ImGuiTextBuffer* function ();
	alias da_ImGuiTextBuffer_destroy = void function (ImGuiTextBuffer* self);
	alias da_ImGuiTextBuffer_begin = const (char)* function (ImGuiTextBuffer* self);
	alias da_ImGuiTextBuffer_end = const (char)* function (ImGuiTextBuffer* self);
	alias da_ImGuiTextBuffer_size = int function (ImGuiTextBuffer* self);
	alias da_ImGuiTextBuffer_empty = bool function (ImGuiTextBuffer* self);
	alias da_ImGuiTextBuffer_clear = void function (ImGuiTextBuffer* self);
	alias da_ImGuiTextBuffer_reserve = void function (ImGuiTextBuffer* self,int capacity);
	alias da_ImGuiTextBuffer_c_str = const (char)* function (ImGuiTextBuffer* self);
	alias da_ImGuiTextBuffer_append = void function (ImGuiTextBuffer* self,const (char)* str,const (char)* str_end);
	alias da_ImGuiTextBuffer_appendfv = void function (ImGuiTextBuffer* self,const (char)* fmt,va_list args);
	alias da_ImGuiStoragePair_ImGuiStoragePairInt = ImGuiStoragePair* function (ImGuiID _key,int _val_i);
	alias da_ImGuiStoragePair_destroy = void function (ImGuiStoragePair* self);
	alias da_ImGuiStoragePair_ImGuiStoragePairFloat = ImGuiStoragePair* function (ImGuiID _key,float _val_f);
	alias da_ImGuiStoragePair_ImGuiStoragePairPtr = ImGuiStoragePair* function (ImGuiID _key,void* _val_p);
	alias da_ImGuiStorage_Clear = void function (ImGuiStorage* self);
	alias da_ImGuiStorage_GetInt = int function (ImGuiStorage* self,ImGuiID key,int default_val);
	alias da_ImGuiStorage_SetInt = void function (ImGuiStorage* self,ImGuiID key,int val);
	alias da_ImGuiStorage_GetBool = bool function (ImGuiStorage* self,ImGuiID key,bool default_val);
	alias da_ImGuiStorage_SetBool = void function (ImGuiStorage* self,ImGuiID key,bool val);
	alias da_ImGuiStorage_GetFloat = float function (ImGuiStorage* self,ImGuiID key,float default_val);
	alias da_ImGuiStorage_SetFloat = void function (ImGuiStorage* self,ImGuiID key,float val);
	alias da_ImGuiStorage_GetVoidPtr = void* function (ImGuiStorage* self,ImGuiID key);
	alias da_ImGuiStorage_SetVoidPtr = void function (ImGuiStorage* self,ImGuiID key,void* val);
	alias da_ImGuiStorage_GetIntRef = int* function (ImGuiStorage* self,ImGuiID key,int default_val);
	alias da_ImGuiStorage_GetBoolRef = bool* function (ImGuiStorage* self,ImGuiID key,bool default_val);
	alias da_ImGuiStorage_GetFloatRef = float* function (ImGuiStorage* self,ImGuiID key,float default_val);
	alias da_ImGuiStorage_GetVoidPtrRef = void** function (ImGuiStorage* self,ImGuiID key,void* default_val);
	alias da_ImGuiStorage_SetAllInt = void function (ImGuiStorage* self,int val);
	alias da_ImGuiStorage_BuildSortByKey = void function (ImGuiStorage* self);
	alias da_ImGuiListClipper_ImGuiListClipper = ImGuiListClipper* function (int items_count,float items_height);
	alias da_ImGuiListClipper_destroy = void function (ImGuiListClipper* self);
	alias da_ImGuiListClipper_Step = bool function (ImGuiListClipper* self);
	alias da_ImGuiListClipper_Begin = void function (ImGuiListClipper* self,int items_count,float items_height);
	alias da_ImGuiListClipper_End = void function (ImGuiListClipper* self);
	alias da_ImColor_ImColorNil = ImColor* function ();
	alias da_ImColor_destroy = void function (ImColor* self);
	alias da_ImColor_ImColorInt = ImColor* function (int r,int g,int b,int a);
	alias da_ImColor_ImColorU32 = ImColor* function (ImU32 rgba);
	alias da_ImColor_ImColorFloat = ImColor* function (float r,float g,float b,float a);
	alias da_ImColor_ImColorVec4 = ImColor* function (const ImVec4 col);
	alias da_ImColor_SetHSV = void function (ImColor* self,float h,float s,float v,float a);
	alias da_ImColor_HSV = void function (ImColor *pOut,float h,float s,float v,float a);
	alias da_ImDrawCmd_ImDrawCmd = ImDrawCmd* function ();
	alias da_ImDrawCmd_destroy = void function (ImDrawCmd* self);
	alias da_ImDrawListSplitter_ImDrawListSplitter = ImDrawListSplitter* function ();
	alias da_ImDrawListSplitter_destroy = void function (ImDrawListSplitter* self);
	alias da_ImDrawListSplitter_Clear = void function (ImDrawListSplitter* self);
	alias da_ImDrawListSplitter_ClearFreeMemory = void function (ImDrawListSplitter* self);
	alias da_ImDrawListSplitter_Split = void function (ImDrawListSplitter* self,ImDrawList* draw_list,int count);
	alias da_ImDrawListSplitter_Merge = void function (ImDrawListSplitter* self,ImDrawList* draw_list);
	alias da_ImDrawListSplitter_SetCurrentChannel = void function (ImDrawListSplitter* self,ImDrawList* draw_list,int channel_idx);
	alias da_ImDrawList_ImDrawList = ImDrawList* function (const ImDrawListSharedData* shared_data);
	alias da_ImDrawList_destroy = void function (ImDrawList* self);
	alias da_ImDrawList_PushClipRect = void function (ImDrawList* self,ImVec2 clip_rect_min,ImVec2 clip_rect_max,bool intersect_with_current_clip_rect);
	alias da_ImDrawList_PushClipRectFullScreen = void function (ImDrawList* self);
	alias da_ImDrawList_PopClipRect = void function (ImDrawList* self);
	alias da_ImDrawList_PushTextureID = void function (ImDrawList* self,ImTextureID texture_id);
	alias da_ImDrawList_PopTextureID = void function (ImDrawList* self);
	alias da_ImDrawList_GetClipRectMin = void function (ImVec2 *pOut,ImDrawList* self);
	alias da_ImDrawList_GetClipRectMax = void function (ImVec2 *pOut,ImDrawList* self);
	alias da_ImDrawList_AddLine = void function (ImDrawList* self,const ImVec2 p1,const ImVec2 p2,ImU32 col,float thickness);
	alias da_ImDrawList_AddRect = void function (ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col,float rounding,ImDrawCornerFlags rounding_corners,float thickness);
	alias da_ImDrawList_AddRectFilled = void function (ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col,float rounding,ImDrawCornerFlags rounding_corners);
	alias da_ImDrawList_AddRectFilledMultiColor = void function (ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col_upr_left,ImU32 col_upr_right,ImU32 col_bot_right,ImU32 col_bot_left);
	alias da_ImDrawList_AddQuad = void function (ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col,float thickness);
	alias da_ImDrawList_AddQuadFilled = void function (ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col);
	alias da_ImDrawList_AddTriangle = void function (ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,ImU32 col,float thickness);
	alias da_ImDrawList_AddTriangleFilled = void function (ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,ImU32 col);
	alias da_ImDrawList_AddCircle = void function (ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments,float thickness);
	alias da_ImDrawList_AddCircleFilled = void function (ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments);
	alias da_ImDrawList_AddNgon = void function (ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments,float thickness);
	alias da_ImDrawList_AddNgonFilled = void function (ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments);
	alias da_ImDrawList_AddTextVec2 = void function (ImDrawList* self,const ImVec2 pos,ImU32 col,const (char)* text_begin,const (char)* text_end);
	alias da_ImDrawList_AddTextFontPtr = void function (ImDrawList* self,const ImFont* font,float font_size,const ImVec2 pos,ImU32 col,const (char)* text_begin,const (char)* text_end,float wrap_width,const ImVec4* cpu_fine_clip_rect);
	alias da_ImDrawList_AddPolyline = void function (ImDrawList* self,const ImVec2* points,int num_points,ImU32 col,bool closed,float thickness);
	alias da_ImDrawList_AddConvexPolyFilled = void function (ImDrawList* self,const ImVec2* points,int num_points,ImU32 col);
	alias da_ImDrawList_AddBezierCurve = void function (ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col,float thickness,int num_segments);
	alias da_ImDrawList_AddImage = void function (ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p_min,const ImVec2 p_max,const ImVec2 uv_min,const ImVec2 uv_max,ImU32 col);
	alias da_ImDrawList_AddImageQuad = void function (ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,const ImVec2 uv1,const ImVec2 uv2,const ImVec2 uv3,const ImVec2 uv4,ImU32 col);
	alias da_ImDrawList_AddImageRounded = void function (ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p_min,const ImVec2 p_max,const ImVec2 uv_min,const ImVec2 uv_max,ImU32 col,float rounding,ImDrawCornerFlags rounding_corners);
	alias da_ImDrawList_PathClear = void function (ImDrawList* self);
	alias da_ImDrawList_PathLineTo = void function (ImDrawList* self,const ImVec2 pos);
	alias da_ImDrawList_PathLineToMergeDuplicate = void function (ImDrawList* self,const ImVec2 pos);
	alias da_ImDrawList_PathFillConvex = void function (ImDrawList* self,ImU32 col);
	alias da_ImDrawList_PathStroke = void function (ImDrawList* self,ImU32 col,bool closed,float thickness);
	alias da_ImDrawList_PathArcTo = void function (ImDrawList* self,const ImVec2 center,float radius,float a_min,float a_max,int num_segments);
	alias da_ImDrawList_PathArcToFast = void function (ImDrawList* self,const ImVec2 center,float radius,int a_min_of_12,int a_max_of_12);
	alias da_ImDrawList_PathBezierCurveTo = void function (ImDrawList* self,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,int num_segments);
	alias da_ImDrawList_PathRect = void function (ImDrawList* self,const ImVec2 rect_min,const ImVec2 rect_max,float rounding,ImDrawCornerFlags rounding_corners);
	alias da_ImDrawList_AddCallback = void function (ImDrawList* self,ImDrawCallback callback,void* callback_data);
	alias da_ImDrawList_AddDrawCmd = void function (ImDrawList* self);
	alias da_ImDrawList_CloneOutput = ImDrawList* function (ImDrawList* self);
	alias da_ImDrawList_ChannelsSplit = void function (ImDrawList* self,int count);
	alias da_ImDrawList_ChannelsMerge = void function (ImDrawList* self);
	alias da_ImDrawList_ChannelsSetCurrent = void function (ImDrawList* self,int n);
	alias da_ImDrawList_PrimReserve = void function (ImDrawList* self,int idx_count,int vtx_count);
	alias da_ImDrawList_PrimUnreserve = void function (ImDrawList* self,int idx_count,int vtx_count);
	alias da_ImDrawList_PrimRect = void function (ImDrawList* self,const ImVec2 a,const ImVec2 b,ImU32 col);
	alias da_ImDrawList_PrimRectUV = void function (ImDrawList* self,const ImVec2 a,const ImVec2 b,const ImVec2 uv_a,const ImVec2 uv_b,ImU32 col);
	alias da_ImDrawList_PrimQuadUV = void function (ImDrawList* self,const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 d,const ImVec2 uv_a,const ImVec2 uv_b,const ImVec2 uv_c,const ImVec2 uv_d,ImU32 col);
	alias da_ImDrawList_PrimWriteVtx = void function (ImDrawList* self,const ImVec2 pos,const ImVec2 uv,ImU32 col);
	alias da_ImDrawList_PrimWriteIdx = void function (ImDrawList* self,ImDrawIdx idx);
	alias da_ImDrawList_PrimVtx = void function (ImDrawList* self,const ImVec2 pos,const ImVec2 uv,ImU32 col);
	alias da_ImDrawList__ResetForNewFrame = void function (ImDrawList* self);
	alias da_ImDrawList__ClearFreeMemory = void function (ImDrawList* self);
	alias da_ImDrawList__PopUnusedDrawCmd = void function (ImDrawList* self);
	alias da_ImDrawList__OnChangedClipRect = void function (ImDrawList* self);
	alias da_ImDrawList__OnChangedTextureID = void function (ImDrawList* self);
	alias da_ImDrawList__OnChangedVtxOffset = void function (ImDrawList* self);
	alias da_ImDrawData_ImDrawData = ImDrawData* function ();
	alias da_ImDrawData_destroy = void function (ImDrawData* self);
	alias da_ImDrawData_Clear = void function (ImDrawData* self);
	alias da_ImDrawData_DeIndexAllBuffers = void function (ImDrawData* self);
	alias da_ImDrawData_ScaleClipRects = void function (ImDrawData* self,const ImVec2 fb_scale);
	alias da_ImFontConfig_ImFontConfig = ImFontConfig* function ();
	alias da_ImFontConfig_destroy = void function (ImFontConfig* self);
	alias da_ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder = ImFontGlyphRangesBuilder* function ();
	alias da_ImFontGlyphRangesBuilder_destroy = void function (ImFontGlyphRangesBuilder* self);
	alias da_ImFontGlyphRangesBuilder_Clear = void function (ImFontGlyphRangesBuilder* self);
	alias da_ImFontGlyphRangesBuilder_GetBit = bool function (ImFontGlyphRangesBuilder* self,size_t n);
	alias da_ImFontGlyphRangesBuilder_SetBit = void function (ImFontGlyphRangesBuilder* self,size_t n);
	alias da_ImFontGlyphRangesBuilder_AddChar = void function (ImFontGlyphRangesBuilder* self,ImWchar c);
	alias da_ImFontGlyphRangesBuilder_AddText = void function (ImFontGlyphRangesBuilder* self,const (char)* text,const (char)* text_end);
	alias da_ImFontGlyphRangesBuilder_AddRanges = void function (ImFontGlyphRangesBuilder* self,const ImWchar* ranges);
	alias da_ImFontGlyphRangesBuilder_BuildRanges = void function (ImFontGlyphRangesBuilder* self,ImVector_ImWchar* out_ranges);
	alias da_ImFontAtlasCustomRect_ImFontAtlasCustomRect = ImFontAtlasCustomRect* function ();
	alias da_ImFontAtlasCustomRect_destroy = void function (ImFontAtlasCustomRect* self);
	alias da_ImFontAtlasCustomRect_IsPacked = bool function (ImFontAtlasCustomRect* self);
	alias da_ImFontAtlas_ImFontAtlas = ImFontAtlas* function ();
	alias da_ImFontAtlas_destroy = void function (ImFontAtlas* self);
	alias da_ImFontAtlas_AddFont = ImFont* function (ImFontAtlas* self,const ImFontConfig* font_cfg);
	alias da_ImFontAtlas_AddFontDefault = ImFont* function (ImFontAtlas* self,const ImFontConfig* font_cfg);
	alias da_ImFontAtlas_AddFontFromFileTTF = ImFont* function (ImFontAtlas* self,const (char)* filename,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges);
	alias da_ImFontAtlas_AddFontFromMemoryTTF = ImFont* function (ImFontAtlas* self,void* font_data,int font_size,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges);
	alias da_ImFontAtlas_AddFontFromMemoryCompressedTTF = ImFont* function (ImFontAtlas* self,const void* compressed_font_data,int compressed_font_size,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges);
	alias da_ImFontAtlas_AddFontFromMemoryCompressedBase85TTF = ImFont* function (ImFontAtlas* self,const (char)* compressed_font_data_base85,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges);
	alias da_ImFontAtlas_ClearInputData = void function (ImFontAtlas* self);
	alias da_ImFontAtlas_ClearTexData = void function (ImFontAtlas* self);
	alias da_ImFontAtlas_ClearFonts = void function (ImFontAtlas* self);
	alias da_ImFontAtlas_Clear = void function (ImFontAtlas* self);
	alias da_ImFontAtlas_Build = bool function (ImFontAtlas* self);
	alias da_ImFontAtlas_GetTexDataAsAlpha8 = void function (ImFontAtlas* self,ubyte** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel);
	alias da_ImFontAtlas_GetTexDataAsRGBA32 = void function (ImFontAtlas* self,ubyte** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel);
	alias da_ImFontAtlas_IsBuilt = bool function (ImFontAtlas* self);
	alias da_ImFontAtlas_SetTexID = void function (ImFontAtlas* self,ImTextureID id);
	alias da_ImFontAtlas_GetGlyphRangesDefault = const ImWchar* function (ImFontAtlas* self);
	alias da_ImFontAtlas_GetGlyphRangesKorean = const ImWchar* function (ImFontAtlas* self);
	alias da_ImFontAtlas_GetGlyphRangesJapanese = const ImWchar* function (ImFontAtlas* self);
	alias da_ImFontAtlas_GetGlyphRangesChineseFull = const ImWchar* function (ImFontAtlas* self);
	alias da_ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon = const ImWchar* function (ImFontAtlas* self);
	alias da_ImFontAtlas_GetGlyphRangesCyrillic = const ImWchar* function (ImFontAtlas* self);
	alias da_ImFontAtlas_GetGlyphRangesThai = const ImWchar* function (ImFontAtlas* self);
	alias da_ImFontAtlas_GetGlyphRangesVietnamese = const ImWchar* function (ImFontAtlas* self);
	alias da_ImFontAtlas_AddCustomRectRegular = int function (ImFontAtlas* self,int width,int height);
	alias da_ImFontAtlas_AddCustomRectFontGlyph = int function (ImFontAtlas* self,ImFont* font,ImWchar id,int width,int height,float advance_x,const ImVec2 offset);
	alias da_ImFontAtlas_GetCustomRectByIndex = ImFontAtlasCustomRect* function (ImFontAtlas* self,int index);
	alias da_ImFontAtlas_CalcCustomRectUV = void function (ImFontAtlas* self,const ImFontAtlasCustomRect* rect,ImVec2* out_uv_min,ImVec2* out_uv_max);
	alias da_ImFontAtlas_GetMouseCursorTexData = bool function (ImFontAtlas* self,ImGuiMouseCursor cursor,ImVec2* out_offset,ImVec2* out_size,ImVec2 * out_uv_border,ImVec2 * out_uv_fill);
	alias da_ImFont_ImFont = ImFont* function ();
	alias da_ImFont_destroy = void function (ImFont* self);
	alias da_ImFont_FindGlyph = const ImFontGlyph* function (ImFont* self,ImWchar c);
	alias da_ImFont_FindGlyphNoFallback = const ImFontGlyph* function (ImFont* self,ImWchar c);
	alias da_ImFont_GetCharAdvance = float function (ImFont* self,ImWchar c);
	alias da_ImFont_IsLoaded = bool function (ImFont* self);
	alias da_ImFont_GetDebugName = const (char)* function (ImFont* self);
	alias da_ImFont_CalcTextSizeA = void function (ImVec2 *pOut,ImFont* self,float size,float max_width,float wrap_width,const (char)* text_begin,const (char)* text_end,const (char)** remaining);
	alias da_ImFont_CalcWordWrapPositionA = const (char)* function (ImFont* self,float scale,const (char)* text,const (char)* text_end,float wrap_width);
	alias da_ImFont_RenderChar = void function (ImFont* self,ImDrawList* draw_list,float size,ImVec2 pos,ImU32 col,ImWchar c);
	alias da_ImFont_RenderText = void function (ImFont* self,ImDrawList* draw_list,float size,ImVec2 pos,ImU32 col,const ImVec4 clip_rect,const (char)* text_begin,const (char)* text_end,float wrap_width,bool cpu_fine_clip);
	alias da_ImFont_BuildLookupTable = void function (ImFont* self);
	alias da_ImFont_ClearOutputData = void function (ImFont* self);
	alias da_ImFont_GrowIndex = void function (ImFont* self,int new_size);
	alias da_ImFont_AddGlyph = void function (ImFont* self,ImFontConfig* src_cfg,ImWchar c,float x0,float y0,float x1,float y1,float u0,float v0,float u1,float v1,float advance_x);
	alias da_ImFont_AddRemapChar = void function (ImFont* self,ImWchar dst,ImWchar src,bool overwrite_dst);
	alias da_ImFont_SetGlyphVisible = void function (ImFont* self,ImWchar c,bool visible);
	alias da_ImFont_SetFallbackChar = void function (ImFont* self,ImWchar c);
	alias da_ImFont_IsGlyphRangeUnused = bool function (ImFont* self,uint c_begin,uint c_last);
	alias da_ImGuiPlatformIO_ImGuiPlatformIO = ImGuiPlatformIO* function ();
	alias da_ImGuiPlatformIO_destroy = void function (ImGuiPlatformIO* self);
	alias da_ImGuiPlatformMonitor_ImGuiPlatformMonitor = ImGuiPlatformMonitor* function ();
	alias da_ImGuiPlatformMonitor_destroy = void function (ImGuiPlatformMonitor* self);
	alias da_ImGuiViewport_ImGuiViewport = ImGuiViewport* function ();
	alias da_ImGuiViewport_destroy = void function (ImGuiViewport* self);
	alias da_ImGuiViewport_GetCenter = void function (ImVec2 *pOut,ImGuiViewport* self);
	alias da_ImGuiViewport_GetWorkPos = void function (ImVec2 *pOut,ImGuiViewport* self);
	alias da_ImGuiViewport_GetWorkSize = void function (ImVec2 *pOut,ImGuiViewport* self);
	alias da_igImHashData = ImU32 function (const void* data,size_t data_size,ImU32 seed);
	alias da_igImHashStr = ImU32 function (const (char)* data,size_t data_size,ImU32 seed);
	alias da_igImAlphaBlendColors = ImU32 function (ImU32 col_a,ImU32 col_b);
	alias da_igImIsPowerOfTwo = bool function (int v);
	alias da_igImUpperPowerOfTwo = int function (int v);
	alias da_igImStricmp = int function (const (char)* str1,const (char)* str2);
	alias da_igImStrnicmp = int function (const (char)* str1,const (char)* str2,size_t count);
	alias da_igImStrncpy = void function (char* dst,const (char)* src,size_t count);
	alias da_igImStrdup = char* function (const (char)* str);
	alias da_igImStrdupcpy = char* function (char* dst,size_t* p_dst_size,const (char)* str);
	alias da_igImStrchrRange = const (char)* function (const (char)* str_begin,const (char)* str_end,char c);
	alias da_igImStrlenW = int function (const ImWchar* str);
	alias da_igImStreolRange = const (char)* function (const (char)* str,const (char)* str_end);
	alias da_igImStrbolW = const ImWchar* function (const ImWchar* buf_mid_line,const ImWchar* buf_begin);
	alias da_igImStristr = const (char)* function (const (char)* haystack,const (char)* haystack_end,const (char)* needle,const (char)* needle_end);
	alias da_igImStrTrimBlanks = void function (char* str);
	alias da_igImStrSkipBlank = const (char)* function (const (char)* str);
	alias da_igImFormatString = int function (char* buf,size_t buf_size,const (char)* fmt,...);
	alias da_igImFormatStringV = int function (char* buf,size_t buf_size,const (char)* fmt,va_list args);
	alias da_igImParseFormatFindStart = const (char)* function (const (char)* format);
	alias da_igImParseFormatFindEnd = const (char)* function (const (char)* format);
	alias da_igImParseFormatTrimDecorations = const (char)* function (const (char)* format,char* buf,size_t buf_size);
	alias da_igImParseFormatPrecision = int function (const (char)* format,int default_value);
	alias da_igImCharIsBlankA = bool function (char c);
	alias da_igImCharIsBlankW = bool function (uint c);
	alias da_igImTextStrToUtf8 = int function (char* buf,int buf_size,const ImWchar* in_text,const ImWchar* in_text_end);
	alias da_igImTextCharFromUtf8 = int function (uint* out_char,const (char)* in_text,const (char)* in_text_end);
	alias da_igImTextStrFromUtf8 = int function (ImWchar* buf,int buf_size,const (char)* in_text,const (char)* in_text_end,const (char)** in_remaining);
	alias da_igImTextCountCharsFromUtf8 = int function (const (char)* in_text,const (char)* in_text_end);
	alias da_igImTextCountUtf8BytesFromChar = int function (const (char)* in_text,const (char)* in_text_end);
	alias da_igImTextCountUtf8BytesFromStr = int function (const ImWchar* in_text,const ImWchar* in_text_end);
	alias da_igImFileOpen = ImFileHandle function (const (char)* filename,const (char)* mode);
	alias da_igImFileClose = bool function (ImFileHandle file);
	alias da_igImFileGetSize = ImU64 function (ImFileHandle file);
	alias da_igImFileRead = ImU64 function (void* data,ImU64 size,ImU64 count,ImFileHandle file);
	alias da_igImFileWrite = ImU64 function (const void* data,ImU64 size,ImU64 count,ImFileHandle file);
	alias da_igImFileLoadToMemory = void* function (const (char)* filename,const (char)* mode,size_t* out_file_size,int padding_bytes);
	alias da_igImPowFloat = float function (float x,float y);
	alias da_igImPowdouble = double function (double x,double y);
	alias da_igImLogFloat = float function (float x);
	alias da_igImLogdouble = double function (double x);
	alias da_igImAbsFloat = float function (float x);
	alias da_igImAbsdouble = double function (double x);
	alias da_igImSignFloat = float function (float x);
	alias da_igImSigndouble = double function (double x);
	alias da_igImMin = void function (ImVec2 *pOut,const ImVec2 lhs,const ImVec2 rhs);
	alias da_igImMax = void function (ImVec2 *pOut,const ImVec2 lhs,const ImVec2 rhs);
	alias da_igImClamp = void function (ImVec2 *pOut,const ImVec2 v,const ImVec2 mn,ImVec2 mx);
	alias da_igImLerpVec2Float = void function (ImVec2 *pOut,const ImVec2 a,const ImVec2 b,float t);
	alias da_igImLerpVec2Vec2 = void function (ImVec2 *pOut,const ImVec2 a,const ImVec2 b,const ImVec2 t);
	alias da_igImLerpVec4 = void function (ImVec4 *pOut,const ImVec4 a,const ImVec4 b,float t);
	alias da_igImSaturate = float function (float f);
	alias da_igImLengthSqrVec2 = float function (const ImVec2 lhs);
	alias da_igImLengthSqrVec4 = float function (const ImVec4 lhs);
	alias da_igImInvLength = float function (const ImVec2 lhs,float fail_value);
	alias da_igImFloorFloat = float function (float f);
	alias da_igImFloorVec2 = void function (ImVec2 *pOut,const ImVec2 v);
	alias da_igImModPositive = int function (int a,int b);
	alias da_igImDot = float function (const ImVec2 a,const ImVec2 b);
	alias da_igImRotate = void function (ImVec2 *pOut,const ImVec2 v,float cos_a,float sin_a);
	alias da_igImLinearSweep = float function (float current,float target,float speed);
	alias da_igImMul = void function (ImVec2 *pOut,const ImVec2 lhs,const ImVec2 rhs);
	alias da_igImBezierCalc = void function (ImVec2 *pOut,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,float t);
	alias da_igImBezierClosestPoint = void function (ImVec2 *pOut,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,const ImVec2 p,int num_segments);
	alias da_igImBezierClosestPointCasteljau = void function (ImVec2 *pOut,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,const ImVec2 p,float tess_tol);
	alias da_igImLineClosestPoint = void function (ImVec2 *pOut,const ImVec2 a,const ImVec2 b,const ImVec2 p);
	alias da_igImTriangleContainsPoint = bool function (const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 p);
	alias da_igImTriangleClosestPoint = void function (ImVec2 *pOut,const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 p);
	alias da_igImTriangleBarycentricCoords = void function (const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 p,float* out_u,float* out_v,float* out_w);
	alias da_igImTriangleArea = float function (const ImVec2 a,const ImVec2 b,const ImVec2 c);
	alias da_igImGetDirQuadrantFromDelta = ImGuiDir function (float dx,float dy);
	alias da_ImVec1_ImVec1Nil = ImVec1* function ();
	alias da_ImVec1_destroy = void function (ImVec1* self);
	alias da_ImVec1_ImVec1Float = ImVec1* function (float _x);
	alias da_ImVec2ih_ImVec2ihNil = ImVec2ih* function ();
	alias da_ImVec2ih_destroy = void function (ImVec2ih* self);
	alias da_ImVec2ih_ImVec2ihshort = ImVec2ih* function (short _x,short _y);
	alias da_ImVec2ih_ImVec2ihVec2 = ImVec2ih* function (const ImVec2 rhs);
	alias da_ImRect_ImRectNil = ImRect* function ();
	alias da_ImRect_destroy = void function (ImRect* self);
	alias da_ImRect_ImRectVec2 = ImRect* function (const ImVec2 min,const ImVec2 max);
	alias da_ImRect_ImRectVec4 = ImRect* function (const ImVec4 v);
	alias da_ImRect_ImRectFloat = ImRect* function (float x1,float y1,float x2,float y2);
	alias da_ImRect_GetCenter = void function (ImVec2 *pOut,ImRect* self);
	alias da_ImRect_GetSize = void function (ImVec2 *pOut,ImRect* self);
	alias da_ImRect_GetWidth = float function (ImRect* self);
	alias da_ImRect_GetHeight = float function (ImRect* self);
	alias da_ImRect_GetTL = void function (ImVec2 *pOut,ImRect* self);
	alias da_ImRect_GetTR = void function (ImVec2 *pOut,ImRect* self);
	alias da_ImRect_GetBL = void function (ImVec2 *pOut,ImRect* self);
	alias da_ImRect_GetBR = void function (ImVec2 *pOut,ImRect* self);
	alias da_ImRect_ContainsVec2 = bool function (ImRect* self,const ImVec2 p);
	alias da_ImRect_ContainsRect = bool function (ImRect* self,const ImRect r);
	alias da_ImRect_Overlaps = bool function (ImRect* self,const ImRect r);
	alias da_ImRect_AddVec2 = void function (ImRect* self,const ImVec2 p);
	alias da_ImRect_AddRect = void function (ImRect* self,const ImRect r);
	alias da_ImRect_ExpandFloat = void function (ImRect* self,const float amount);
	alias da_ImRect_ExpandVec2 = void function (ImRect* self,const ImVec2 amount);
	alias da_ImRect_Translate = void function (ImRect* self,const ImVec2 d);
	alias da_ImRect_TranslateX = void function (ImRect* self,float dx);
	alias da_ImRect_TranslateY = void function (ImRect* self,float dy);
	alias da_ImRect_ClipWith = void function (ImRect* self,const ImRect r);
	alias da_ImRect_ClipWithFull = void function (ImRect* self,const ImRect r);
	alias da_ImRect_Floor = void function (ImRect* self);
	alias da_ImRect_IsInverted = bool function (ImRect* self);
	alias da_ImRect_ToVec4 = void function (ImVec4 *pOut,ImRect* self);
	alias da_igImBitArrayTestBit = bool function (const ImU32* arr,int n);
	alias da_igImBitArrayClearBit = void function (ImU32* arr,int n);
	alias da_igImBitArraySetBit = void function (ImU32* arr,int n);
	alias da_igImBitArraySetBitRange = void function (ImU32* arr,int n,int n2);
	alias da_ImBitVector_Create = void function (ImBitVector* self,int sz);
	alias da_ImBitVector_Clear = void function (ImBitVector* self);
	alias da_ImBitVector_TestBit = bool function (ImBitVector* self,int n);
	alias da_ImBitVector_SetBit = void function (ImBitVector* self,int n);
	alias da_ImBitVector_ClearBit = void function (ImBitVector* self,int n);
	alias da_ImDrawListSharedData_ImDrawListSharedData = ImDrawListSharedData* function ();
	alias da_ImDrawListSharedData_destroy = void function (ImDrawListSharedData* self);
	alias da_ImDrawListSharedData_SetCircleSegmentMaxError = void function (ImDrawListSharedData* self,float max_error);
	alias da_ImDrawDataBuilder_Clear = void function (ImDrawDataBuilder* self);
	alias da_ImDrawDataBuilder_ClearFreeMemory = void function (ImDrawDataBuilder* self);
	alias da_ImDrawDataBuilder_FlattenIntoSingleLayer = void function (ImDrawDataBuilder* self);
	alias da_ImGuiStyleMod_ImGuiStyleModInt = ImGuiStyleMod* function (ImGuiStyleVar idx,int v);
	alias da_ImGuiStyleMod_destroy = void function (ImGuiStyleMod* self);
	alias da_ImGuiStyleMod_ImGuiStyleModFloat = ImGuiStyleMod* function (ImGuiStyleVar idx,float v);
	alias da_ImGuiStyleMod_ImGuiStyleModVec2 = ImGuiStyleMod* function (ImGuiStyleVar idx,ImVec2 v);
	alias da_ImGuiMenuColumns_ImGuiMenuColumns = ImGuiMenuColumns* function ();
	alias da_ImGuiMenuColumns_destroy = void function (ImGuiMenuColumns* self);
	alias da_ImGuiMenuColumns_Update = void function (ImGuiMenuColumns* self,int count,float spacing,bool clear);
	alias da_ImGuiMenuColumns_DeclColumns = float function (ImGuiMenuColumns* self,float w0,float w1,float w2);
	alias da_ImGuiMenuColumns_CalcExtraSpace = float function (ImGuiMenuColumns* self,float avail_w);
	alias da_ImGuiInputTextState_ImGuiInputTextState = ImGuiInputTextState* function ();
	alias da_ImGuiInputTextState_destroy = void function (ImGuiInputTextState* self);
	alias da_ImGuiInputTextState_ClearText = void function (ImGuiInputTextState* self);
	alias da_ImGuiInputTextState_ClearFreeMemory = void function (ImGuiInputTextState* self);
	alias da_ImGuiInputTextState_GetUndoAvailCount = int function (ImGuiInputTextState* self);
	alias da_ImGuiInputTextState_GetRedoAvailCount = int function (ImGuiInputTextState* self);
	alias da_ImGuiInputTextState_OnKeyPressed = void function (ImGuiInputTextState* self,int key);
	alias da_ImGuiInputTextState_CursorAnimReset = void function (ImGuiInputTextState* self);
	alias da_ImGuiInputTextState_CursorClamp = void function (ImGuiInputTextState* self);
	alias da_ImGuiInputTextState_HasSelection = bool function (ImGuiInputTextState* self);
	alias da_ImGuiInputTextState_ClearSelection = void function (ImGuiInputTextState* self);
	alias da_ImGuiInputTextState_SelectAll = void function (ImGuiInputTextState* self);
	alias da_ImGuiPopupData_ImGuiPopupData = ImGuiPopupData* function ();
	alias da_ImGuiPopupData_destroy = void function (ImGuiPopupData* self);
	alias da_ImGuiNavMoveResult_ImGuiNavMoveResult = ImGuiNavMoveResult* function ();
	alias da_ImGuiNavMoveResult_destroy = void function (ImGuiNavMoveResult* self);
	alias da_ImGuiNavMoveResult_Clear = void function (ImGuiNavMoveResult* self);
	alias da_ImGuiNextWindowData_ImGuiNextWindowData = ImGuiNextWindowData* function ();
	alias da_ImGuiNextWindowData_destroy = void function (ImGuiNextWindowData* self);
	alias da_ImGuiNextWindowData_ClearFlags = void function (ImGuiNextWindowData* self);
	alias da_ImGuiNextItemData_ImGuiNextItemData = ImGuiNextItemData* function ();
	alias da_ImGuiNextItemData_destroy = void function (ImGuiNextItemData* self);
	alias da_ImGuiNextItemData_ClearFlags = void function (ImGuiNextItemData* self);
	alias da_ImGuiPtrOrIndex_ImGuiPtrOrIndexPtr = ImGuiPtrOrIndex* function (void* ptr);
	alias da_ImGuiPtrOrIndex_destroy = void function (ImGuiPtrOrIndex* self);
	alias da_ImGuiPtrOrIndex_ImGuiPtrOrIndexInt = ImGuiPtrOrIndex* function (int index);
	alias da_ImGuiColumnData_ImGuiColumnData = ImGuiColumnData* function ();
	alias da_ImGuiColumnData_destroy = void function (ImGuiColumnData* self);
	alias da_ImGuiColumns_ImGuiColumns = ImGuiColumns* function ();
	alias da_ImGuiColumns_destroy = void function (ImGuiColumns* self);
	alias da_ImGuiColumns_Clear = void function (ImGuiColumns* self);
	alias da_ImGuiDockNode_ImGuiDockNode = ImGuiDockNode* function (ImGuiID id);
	alias da_ImGuiDockNode_destroy = void function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_IsRootNode = bool function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_IsDockSpace = bool function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_IsFloatingNode = bool function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_IsCentralNode = bool function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_IsHiddenTabBar = bool function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_IsNoTabBar = bool function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_IsSplitNode = bool function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_IsLeafNode = bool function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_IsEmpty = bool function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_GetMergedFlags = ImGuiDockNodeFlags function (ImGuiDockNode* self);
	alias da_ImGuiDockNode_Rect = void function (ImRect *pOut,ImGuiDockNode* self);
	alias da_ImGuiDockContext_ImGuiDockContext = ImGuiDockContext* function ();
	alias da_ImGuiDockContext_destroy = void function (ImGuiDockContext* self);
	alias da_ImGuiViewportP_ImGuiViewportP = ImGuiViewportP* function ();
	alias da_ImGuiViewportP_destroy = void function (ImGuiViewportP* self);
	alias da_ImGuiViewportP_GetMainRect = void function (ImRect *pOut,ImGuiViewportP* self);
	alias da_ImGuiViewportP_GetWorkRect = void function (ImRect *pOut,ImGuiViewportP* self);
	alias da_ImGuiViewportP_ClearRequestFlags = void function (ImGuiViewportP* self);
	alias da_ImGuiWindowSettings_ImGuiWindowSettings = ImGuiWindowSettings* function ();
	alias da_ImGuiWindowSettings_destroy = void function (ImGuiWindowSettings* self);
	alias da_ImGuiWindowSettings_GetName = char* function (ImGuiWindowSettings* self);
	alias da_ImGuiSettingsHandler_ImGuiSettingsHandler = ImGuiSettingsHandler* function ();
	alias da_ImGuiSettingsHandler_destroy = void function (ImGuiSettingsHandler* self);
	alias da_ImGuiContext_ImGuiContext = ImGuiContext* function (ImFontAtlas* shared_font_atlas);
	alias da_ImGuiContext_destroy = void function (ImGuiContext* self);
	alias da_ImGuiWindowTempData_ImGuiWindowTempData = ImGuiWindowTempData* function ();
	alias da_ImGuiWindowTempData_destroy = void function (ImGuiWindowTempData* self);
	alias da_ImGuiWindow_ImGuiWindow = ImGuiWindow* function (ImGuiContext* context,const (char)* name);
	alias da_ImGuiWindow_destroy = void function (ImGuiWindow* self);
	alias da_ImGuiWindow_GetIDStr = ImGuiID function (ImGuiWindow* self,const (char)* str,const (char)* str_end);
	alias da_ImGuiWindow_GetIDPtr = ImGuiID function (ImGuiWindow* self,const void* ptr);
	alias da_ImGuiWindow_GetIDInt = ImGuiID function (ImGuiWindow* self,int n);
	alias da_ImGuiWindow_GetIDNoKeepAliveStr = ImGuiID function (ImGuiWindow* self,const (char)* str,const (char)* str_end);
	alias da_ImGuiWindow_GetIDNoKeepAlivePtr = ImGuiID function (ImGuiWindow* self,const void* ptr);
	alias da_ImGuiWindow_GetIDNoKeepAliveInt = ImGuiID function (ImGuiWindow* self,int n);
	alias da_ImGuiWindow_GetIDFromRectangle = ImGuiID function (ImGuiWindow* self,const ImRect r_abs);
	alias da_ImGuiWindow_Rect = void function (ImRect *pOut,ImGuiWindow* self);
	alias da_ImGuiWindow_CalcFontSize = float function (ImGuiWindow* self);
	alias da_ImGuiWindow_TitleBarHeight = float function (ImGuiWindow* self);
	alias da_ImGuiWindow_TitleBarRect = void function (ImRect *pOut,ImGuiWindow* self);
	alias da_ImGuiWindow_MenuBarHeight = float function (ImGuiWindow* self);
	alias da_ImGuiWindow_MenuBarRect = void function (ImRect *pOut,ImGuiWindow* self);
	alias da_ImGuiLastItemDataBackup_ImGuiLastItemDataBackup = ImGuiLastItemDataBackup* function ();
	alias da_ImGuiLastItemDataBackup_destroy = void function (ImGuiLastItemDataBackup* self);
	alias da_ImGuiLastItemDataBackup_Backup = void function (ImGuiLastItemDataBackup* self);
	alias da_ImGuiLastItemDataBackup_Restore = void function (ImGuiLastItemDataBackup* self);
	alias da_ImGuiTabItem_ImGuiTabItem = ImGuiTabItem* function ();
	alias da_ImGuiTabItem_destroy = void function (ImGuiTabItem* self);
	alias da_ImGuiTabBar_ImGuiTabBar = ImGuiTabBar* function ();
	alias da_ImGuiTabBar_destroy = void function (ImGuiTabBar* self);
	alias da_ImGuiTabBar_GetTabOrder = int function (ImGuiTabBar* self,const ImGuiTabItem* tab);
	alias da_ImGuiTabBar_GetTabName = const (char)* function (ImGuiTabBar* self,const ImGuiTabItem* tab);
	alias da_igGetCurrentWindowRead = ImGuiWindow* function ();
	alias da_igGetCurrentWindow = ImGuiWindow* function ();
	alias da_igFindWindowByID = ImGuiWindow* function (ImGuiID id);
	alias da_igFindWindowByName = ImGuiWindow* function (const (char)* name);
	alias da_igUpdateWindowParentAndRootLinks = void function (ImGuiWindow* window,ImGuiWindowFlags flags,ImGuiWindow* parent_window);
	alias da_igCalcWindowExpectedSize = void function (ImVec2 *pOut,ImGuiWindow* window);
	alias da_igIsWindowChildOf = bool function (ImGuiWindow* window,ImGuiWindow* potential_parent);
	alias da_igIsWindowNavFocusable = bool function (ImGuiWindow* window);
	alias da_igGetWindowAllowedExtentRect = void function (ImRect *pOut,ImGuiWindow* window);
	alias da_igSetWindowPosWindowPtr = void function (ImGuiWindow* window,const ImVec2 pos,ImGuiCond cond);
	alias da_igSetWindowSizeWindowPtr = void function (ImGuiWindow* window,const ImVec2 size,ImGuiCond cond);
	alias da_igSetWindowCollapsedWindowPtr = void function (ImGuiWindow* window,bool collapsed,ImGuiCond cond);
	alias da_igSetWindowHitTestHole = void function (ImGuiWindow* window,const ImVec2 pos,const ImVec2 size);
	alias da_igFocusWindow = void function (ImGuiWindow* window);
	alias da_igFocusTopMostWindowUnderOne = void function (ImGuiWindow* under_this_window,ImGuiWindow* ignore_window);
	alias da_igBringWindowToFocusFront = void function (ImGuiWindow* window);
	alias da_igBringWindowToDisplayFront = void function (ImGuiWindow* window);
	alias da_igBringWindowToDisplayBack = void function (ImGuiWindow* window);
	alias da_igSetCurrentFont = void function (ImFont* font);
	alias da_igGetDefaultFont = ImFont* function ();
	alias da_igGetForegroundDrawListWindowPtr = ImDrawList* function (ImGuiWindow* window);
	alias da_igInitialize = void function (ImGuiContext* context);
	alias da_igShutdown = void function (ImGuiContext* context);
	alias da_igUpdateHoveredWindowAndCaptureFlags = void function ();
	alias da_igStartMouseMovingWindow = void function (ImGuiWindow* window);
	alias da_igStartMouseMovingWindowOrNode = void function (ImGuiWindow* window,ImGuiDockNode* node,bool undock_floating_node);
	alias da_igUpdateMouseMovingWindowNewFrame = void function ();
	alias da_igUpdateMouseMovingWindowEndFrame = void function ();
	alias da_igTranslateWindowsInViewport = void function (ImGuiViewportP* viewport,const ImVec2 old_pos,const ImVec2 new_pos);
	alias da_igScaleWindowsInViewport = void function (ImGuiViewportP* viewport,float scale);
	alias da_igDestroyPlatformWindow = void function (ImGuiViewportP* viewport);
	alias da_igShowViewportThumbnails = void function ();
	alias da_igMarkIniSettingsDirtyNil = void function ();
	alias da_igMarkIniSettingsDirtyWindowPtr = void function (ImGuiWindow* window);
	alias da_igClearIniSettings = void function ();
	alias da_igCreateNewWindowSettings = ImGuiWindowSettings* function (const (char)* name);
	alias da_igFindWindowSettings = ImGuiWindowSettings* function (ImGuiID id);
	alias da_igFindOrCreateWindowSettings = ImGuiWindowSettings* function (const (char)* name);
	alias da_igFindSettingsHandler = ImGuiSettingsHandler* function (const (char)* type_name);
	alias da_igSetNextWindowScroll = void function (const ImVec2 scroll);
	alias da_igSetScrollXWindowPtr = void function (ImGuiWindow* window,float new_scroll_x);
	alias da_igSetScrollYWindowPtr = void function (ImGuiWindow* window,float new_scroll_y);
	alias da_igSetScrollFromPosXWindowPtr = void function (ImGuiWindow* window,float local_x,float center_x_ratio);
	alias da_igSetScrollFromPosYWindowPtr = void function (ImGuiWindow* window,float local_y,float center_y_ratio);
	alias da_igScrollToBringRectIntoView = void function (ImVec2 *pOut,ImGuiWindow* window,const ImRect item_rect);
	alias da_igGetItemID = ImGuiID function ();
	alias da_igGetItemStatusFlags = ImGuiItemStatusFlags function ();
	alias da_igGetActiveID = ImGuiID function ();
	alias da_igGetFocusID = ImGuiID function ();
	alias da_igSetActiveID = void function (ImGuiID id,ImGuiWindow* window);
	alias da_igSetFocusID = void function (ImGuiID id,ImGuiWindow* window);
	alias da_igClearActiveID = void function ();
	alias da_igGetHoveredID = ImGuiID function ();
	alias da_igSetHoveredID = void function (ImGuiID id);
	alias da_igKeepAliveID = void function (ImGuiID id);
	alias da_igMarkItemEdited = void function (ImGuiID id);
	alias da_igPushOverrideID = void function (ImGuiID id);
	alias da_igItemSizeVec2 = void function (const ImVec2 size,float text_baseline_y);
	alias da_igItemSizeRect = void function (const ImRect bb,float text_baseline_y);
	alias da_igItemAdd = bool function (const ImRect bb,ImGuiID id,const ImRect* nav_bb);
	alias da_igItemHoverable = bool function (const ImRect bb,ImGuiID id);
	alias da_igIsClippedEx = bool function (const ImRect bb,ImGuiID id,bool clip_even_when_logged);
	alias da_igSetLastItemData = void function (ImGuiWindow* window,ImGuiID item_id,ImGuiItemStatusFlags status_flags,const ImRect item_rect);
	alias da_igFocusableItemRegister = bool function (ImGuiWindow* window,ImGuiID id);
	alias da_igFocusableItemUnregister = void function (ImGuiWindow* window);
	alias da_igCalcItemSize = void function (ImVec2 *pOut,ImVec2 size,float default_w,float default_h);
	alias da_igCalcWrapWidthForPos = float function (const ImVec2 pos,float wrap_pos_x);
	alias da_igPushMultiItemsWidths = void function (int components,float width_full);
	alias da_igPushItemFlag = void function (ImGuiItemFlags option,bool enabled);
	alias da_igPopItemFlag = void function ();
	alias da_igIsItemToggledSelection = bool function ();
	alias da_igGetContentRegionMaxAbs = void function (ImVec2 *pOut);
	alias da_igShrinkWidths = void function (ImGuiShrinkWidthItem* items,int count,float width_excess);
	alias da_igLogBegin = void function (ImGuiLogType type,int auto_open_depth);
	alias da_igLogToBuffer = void function (int auto_open_depth);
	alias da_igBeginChildEx = bool function (const (char)* name,ImGuiID id,const ImVec2 size_arg,bool border,ImGuiWindowFlags flags);
	alias da_igOpenPopupEx = void function (ImGuiID id,ImGuiPopupFlags popup_flags);
	alias da_igClosePopupToLevel = void function (int remaining,bool restore_focus_to_window_under_popup);
	alias da_igClosePopupsOverWindow = void function (ImGuiWindow* ref_window,bool restore_focus_to_window_under_popup);
	alias da_igIsPopupOpenID = bool function (ImGuiID id,ImGuiPopupFlags popup_flags);
	alias da_igBeginPopupEx = bool function (ImGuiID id,ImGuiWindowFlags extra_flags);
	alias da_igBeginTooltipEx = void function (ImGuiWindowFlags extra_flags,ImGuiTooltipFlags tooltip_flags);
	alias da_igGetTopMostPopupModal = ImGuiWindow* function ();
	alias da_igFindBestWindowPosForPopup = void function (ImVec2 *pOut,ImGuiWindow* window);
	alias da_igFindBestWindowPosForPopupEx = void function (ImVec2 *pOut,const ImVec2 ref_pos,const ImVec2 size,ImGuiDir* last_dir,const ImRect r_outer,const ImRect r_avoid,ImGuiPopupPositionPolicy policy);
	alias da_igNavInitWindow = void function (ImGuiWindow* window,bool force_reinit);
	alias da_igNavMoveRequestButNoResultYet = bool function ();
	alias da_igNavMoveRequestCancel = void function ();
	alias da_igNavMoveRequestForward = void function (ImGuiDir move_dir,ImGuiDir clip_dir,const ImRect bb_rel,ImGuiNavMoveFlags move_flags);
	alias da_igNavMoveRequestTryWrapping = void function (ImGuiWindow* window,ImGuiNavMoveFlags move_flags);
	alias da_igGetNavInputAmount = float function (ImGuiNavInput n,ImGuiInputReadMode mode);
	alias da_igGetNavInputAmount2d = void function (ImVec2 *pOut,ImGuiNavDirSourceFlags dir_sources,ImGuiInputReadMode mode,float slow_factor,float fast_factor);
	alias da_igCalcTypematicRepeatAmount = int function (float t0,float t1,float repeat_delay,float repeat_rate);
	alias da_igActivateItem = void function (ImGuiID id);
	alias da_igSetNavID = void function (ImGuiID id,int nav_layer,ImGuiID focus_scope_id);
	alias da_igSetNavIDWithRectRel = void function (ImGuiID id,int nav_layer,ImGuiID focus_scope_id,const ImRect rect_rel);
	alias da_igPushFocusScope = void function (ImGuiID id);
	alias da_igPopFocusScope = void function ();
	alias da_igGetFocusScopeID = ImGuiID function ();
	alias da_igIsActiveIdUsingNavDir = bool function (ImGuiDir dir);
	alias da_igIsActiveIdUsingNavInput = bool function (ImGuiNavInput input);
	alias da_igIsActiveIdUsingKey = bool function (ImGuiKey key);
	alias da_igIsMouseDragPastThreshold = bool function (ImGuiMouseButton button,float lock_threshold);
	alias da_igIsKeyPressedMap = bool function (ImGuiKey key,bool repeat);
	alias da_igIsNavInputDown = bool function (ImGuiNavInput n);
	alias da_igIsNavInputTest = bool function (ImGuiNavInput n,ImGuiInputReadMode rm);
	alias da_igGetMergedKeyModFlags = ImGuiKeyModFlags function ();
	alias da_igDockContextInitialize = void function (ImGuiContext* ctx);
	alias da_igDockContextShutdown = void function (ImGuiContext* ctx);
	alias da_igDockContextClearNodes = void function (ImGuiContext* ctx,ImGuiID root_id,bool clear_settings_refs);
	alias da_igDockContextRebuildNodes = void function (ImGuiContext* ctx);
	alias da_igDockContextUpdateUndocking = void function (ImGuiContext* ctx);
	alias da_igDockContextUpdateDocking = void function (ImGuiContext* ctx);
	alias da_igDockContextGenNodeID = ImGuiID function (ImGuiContext* ctx);
	alias da_igDockContextQueueDock = void function (ImGuiContext* ctx,ImGuiWindow* target,ImGuiDockNode* target_node,ImGuiWindow* payload,ImGuiDir split_dir,float split_ratio,bool split_outer);
	alias da_igDockContextQueueUndockWindow = void function (ImGuiContext* ctx,ImGuiWindow* window);
	alias da_igDockContextQueueUndockNode = void function (ImGuiContext* ctx,ImGuiDockNode* node);
	alias da_igDockContextCalcDropPosForDocking = bool function (ImGuiWindow* target,ImGuiDockNode* target_node,ImGuiWindow* payload,ImGuiDir split_dir,bool split_outer,ImVec2* out_pos);
	alias da_igDockNodeGetRootNode = ImGuiDockNode* function (ImGuiDockNode* node);
	alias da_igDockNodeGetDepth = int function (const ImGuiDockNode* node);
	alias da_igGetWindowDockNode = ImGuiDockNode* function ();
	alias da_igGetWindowAlwaysWantOwnTabBar = bool function (ImGuiWindow* window);
	alias da_igBeginDocked = void function (ImGuiWindow* window,bool* p_open);
	alias da_igBeginDockableDragDropSource = void function (ImGuiWindow* window);
	alias da_igBeginDockableDragDropTarget = void function (ImGuiWindow* window);
	alias da_igSetWindowDock = void function (ImGuiWindow* window,ImGuiID dock_id,ImGuiCond cond);
	alias da_igDockBuilderDockWindow = void function (const (char)* window_name,ImGuiID node_id);
	alias da_igDockBuilderGetNode = ImGuiDockNode* function (ImGuiID node_id);
	alias da_igDockBuilderGetCentralNode = ImGuiDockNode* function (ImGuiID node_id);
	alias da_igDockBuilderAddNode = ImGuiID function (ImGuiID node_id,ImGuiDockNodeFlags flags);
	alias da_igDockBuilderRemoveNode = void function (ImGuiID node_id);
	alias da_igDockBuilderRemoveNodeDockedWindows = void function (ImGuiID node_id,bool clear_settings_refs);
	alias da_igDockBuilderRemoveNodeChildNodes = void function (ImGuiID node_id);
	alias da_igDockBuilderSetNodePos = void function (ImGuiID node_id,ImVec2 pos);
	alias da_igDockBuilderSetNodeSize = void function (ImGuiID node_id,ImVec2 size);
	alias da_igDockBuilderSplitNode = ImGuiID function (ImGuiID node_id,ImGuiDir split_dir,float size_ratio_for_node_at_dir,ImGuiID* out_id_at_dir,ImGuiID* out_id_at_opposite_dir);
	alias da_igDockBuilderCopyDockSpace = void function (ImGuiID src_dockspace_id,ImGuiID dst_dockspace_id,ImVector_const_charPtr* in_window_remap_pairs);
	alias da_igDockBuilderCopyNode = void function (ImGuiID src_node_id,ImGuiID dst_node_id,ImVector_ImGuiID* out_node_remap_pairs);
	alias da_igDockBuilderCopyWindowSettings = void function (const (char)* src_name,const (char)* dst_name);
	alias da_igDockBuilderFinish = void function (ImGuiID node_id);
	alias da_igBeginDragDropTargetCustom = bool function (const ImRect bb,ImGuiID id);
	alias da_igClearDragDrop = void function ();
	alias da_igIsDragDropPayloadBeingAccepted = bool function ();
	alias da_igSetWindowClipRectBeforeSetChannel = void function (ImGuiWindow* window,const ImRect clip_rect);
	alias da_igBeginColumns = void function (const (char)* str_id,int count,ImGuiColumnsFlags flags);
	alias da_igEndColumns = void function ();
	alias da_igPushColumnClipRect = void function (int column_index);
	alias da_igPushColumnsBackground = void function ();
	alias da_igPopColumnsBackground = void function ();
	alias da_igGetColumnsID = ImGuiID function (const (char)* str_id,int count);
	alias da_igFindOrCreateColumns = ImGuiColumns* function (ImGuiWindow* window,ImGuiID id);
	alias da_igGetColumnOffsetFromNorm = float function (const ImGuiColumns* columns,float offset_norm);
	alias da_igGetColumnNormFromOffset = float function (const ImGuiColumns* columns,float offset);
	alias da_igBeginTabBarEx = bool function (ImGuiTabBar* tab_bar,const ImRect bb,ImGuiTabBarFlags flags,ImGuiDockNode* dock_node);
	alias da_igTabBarFindTabByID = ImGuiTabItem* function (ImGuiTabBar* tab_bar,ImGuiID tab_id);
	alias da_igTabBarFindMostRecentlySelectedTabForActiveWindow = ImGuiTabItem* function (ImGuiTabBar* tab_bar);
	alias da_igTabBarAddTab = void function (ImGuiTabBar* tab_bar,ImGuiTabItemFlags tab_flags,ImGuiWindow* window);
	alias da_igTabBarRemoveTab = void function (ImGuiTabBar* tab_bar,ImGuiID tab_id);
	alias da_igTabBarCloseTab = void function (ImGuiTabBar* tab_bar,ImGuiTabItem* tab);
	alias da_igTabBarQueueChangeTabOrder = void function (ImGuiTabBar* tab_bar,const ImGuiTabItem* tab,int dir);
	alias da_igTabItemEx = bool function (ImGuiTabBar* tab_bar,const (char)* label,bool* p_open,ImGuiTabItemFlags flags,ImGuiWindow* docked_window);
	alias da_igTabItemCalcSize = void function (ImVec2 *pOut,const (char)* label,bool has_close_button);
	alias da_igTabItemBackground = void function (ImDrawList* draw_list,const ImRect bb,ImGuiTabItemFlags flags,ImU32 col);
	alias da_igTabItemLabelAndCloseButton = bool function (ImDrawList* draw_list,const ImRect bb,ImGuiTabItemFlags flags,ImVec2 frame_padding,const (char)* label,ImGuiID tab_id,ImGuiID close_button_id,bool is_contents_visible);
	alias da_igRenderText = void function (ImVec2 pos,const (char)* text,const (char)* text_end,bool hide_text_after_hash);
	alias da_igRenderTextWrapped = void function (ImVec2 pos,const (char)* text,const (char)* text_end,float wrap_width);
	alias da_igRenderTextClipped = void function (const ImVec2 pos_min,const ImVec2 pos_max,const (char)* text,const (char)* text_end,const ImVec2* text_size_if_known,const ImVec2  align_,const ImRect* clip_rect);
	alias da_igRenderTextClippedEx = void function (ImDrawList* draw_list,const ImVec2 pos_min,const ImVec2 pos_max,const (char)* text,const (char)* text_end,const ImVec2* text_size_if_known,const ImVec2  align_,const ImRect* clip_rect);
	alias da_igRenderTextEllipsis = void function (ImDrawList* draw_list,const ImVec2 pos_min,const ImVec2 pos_max,float clip_max_x,float ellipsis_max_x,const (char)* text,const (char)* text_end,const ImVec2* text_size_if_known);
	alias da_igRenderFrame = void function (ImVec2 p_min,ImVec2 p_max,ImU32 fill_col,bool border,float rounding);
	alias da_igRenderFrameBorder = void function (ImVec2 p_min,ImVec2 p_max,float rounding);
	alias da_igRenderColorRectWithAlphaCheckerboard = void function (ImDrawList* draw_list,ImVec2 p_min,ImVec2 p_max,ImU32 fill_col,float grid_step,ImVec2 grid_off,float rounding,int rounding_corners_flags);
	alias da_igRenderNavHighlight = void function (const ImRect bb,ImGuiID id,ImGuiNavHighlightFlags flags);
	alias da_igFindRenderedTextEnd = const (char)* function (const (char)* text,const (char)* text_end);
	alias da_igLogRenderedText = void function (const ImVec2* ref_pos,const (char)* text,const (char)* text_end);
	alias da_igRenderArrow = void function (ImDrawList* draw_list,ImVec2 pos,ImU32 col,ImGuiDir dir,float scale);
	alias da_igRenderBullet = void function (ImDrawList* draw_list,ImVec2 pos,ImU32 col);
	alias da_igRenderCheckMark = void function (ImDrawList* draw_list,ImVec2 pos,ImU32 col,float sz);
	alias da_igRenderMouseCursor = void function (ImDrawList* draw_list,ImVec2 pos,float scale,ImGuiMouseCursor mouse_cursor,ImU32 col_fill,ImU32 col_border,ImU32 col_shadow);
	alias da_igRenderArrowPointingAt = void function (ImDrawList* draw_list,ImVec2 pos,ImVec2 half_sz,ImGuiDir direction,ImU32 col);
	alias da_igRenderArrowDockMenu = void function (ImDrawList* draw_list,ImVec2 p_min,float sz,ImU32 col);
	alias da_igRenderRectFilledRangeH = void function (ImDrawList* draw_list,const ImRect rect,ImU32 col,float x_start_norm,float x_end_norm,float rounding);
	alias da_igRenderRectFilledWithHole = void function (ImDrawList* draw_list,ImRect outer,ImRect inner,ImU32 col,float rounding);
	alias da_igTextEx = void function (const (char)* text,const (char)* text_end,ImGuiTextFlags flags);
	alias da_igButtonEx = bool function (const (char)* label,const ImVec2 size_arg,ImGuiButtonFlags flags);
	alias da_igCloseButton = bool function (ImGuiID id,const ImVec2 pos);
	alias da_igCollapseButton = bool function (ImGuiID id,const ImVec2 pos,ImGuiDockNode* dock_node);
	alias da_igArrowButtonEx = bool function (const (char)* str_id,ImGuiDir dir,ImVec2 size_arg,ImGuiButtonFlags flags);
	alias da_igScrollbar = void function (ImGuiAxis axis);
	alias da_igScrollbarEx = bool function (const ImRect bb,ImGuiID id,ImGuiAxis axis,float* p_scroll_v,float avail_v,float contents_v,ImDrawCornerFlags rounding_corners);
	alias da_igImageButtonEx = bool function (ImGuiID id,ImTextureID texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,const ImVec2 padding,const ImVec4 bg_col,const ImVec4 tint_col);
	alias da_igGetWindowScrollbarRect = void function (ImRect *pOut,ImGuiWindow* window,ImGuiAxis axis);
	alias da_igGetWindowScrollbarID = ImGuiID function (ImGuiWindow* window,ImGuiAxis axis);
	alias da_igGetWindowResizeID = ImGuiID function (ImGuiWindow* window,int n);
	alias da_igSeparatorEx = void function (ImGuiSeparatorFlags flags);
	alias da_igButtonBehavior = bool function (const ImRect bb,ImGuiID id,bool* out_hovered,bool* out_held,ImGuiButtonFlags flags);
	alias da_igDragBehavior = bool function (ImGuiID id,ImGuiDataType data_type,void* p_v,float v_speed,const void* p_min,const void* p_max,const (char)* format,ImGuiSliderFlags flags);
	alias da_igSliderBehavior = bool function (const ImRect bb,ImGuiID id,ImGuiDataType data_type,void* p_v,const void* p_min,const void* p_max,const (char)* format,ImGuiSliderFlags flags,ImRect* out_grab_bb);
	alias da_igSplitterBehavior = bool function (const ImRect bb,ImGuiID id,ImGuiAxis axis,float* size1,float* size2,float min_size1,float min_size2,float hover_extend,float hover_visibility_delay);
	alias da_igTreeNodeBehavior = bool function (ImGuiID id,ImGuiTreeNodeFlags flags,const (char)* label,const (char)* label_end);
	alias da_igTreeNodeBehaviorIsOpen = bool function (ImGuiID id,ImGuiTreeNodeFlags flags);
	alias da_igTreePushOverrideID = void function (ImGuiID id);
	alias da_igDataTypeGetInfo = const ImGuiDataTypeInfo* function (ImGuiDataType data_type);
	alias da_igDataTypeFormatString = int function (char* buf,int buf_size,ImGuiDataType data_type,const void* p_data,const (char)* format);
	alias da_igDataTypeApplyOp = void function (ImGuiDataType data_type,int op,void* output,void* arg_1,const void* arg_2);
	alias da_igDataTypeApplyOpFromText = bool function (const (char)* buf,const (char)* initial_value_buf,ImGuiDataType data_type,void* p_data,const (char)* format);
	alias da_igDataTypeClamp = bool function (ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max);
	alias da_igInputTextEx = bool function (const (char)* label,const (char)* hint,char* buf,int buf_size,const ImVec2 size_arg,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data);
	alias da_igTempInputText = bool function (const ImRect bb,ImGuiID id,const (char)* label,char* buf,int buf_size,ImGuiInputTextFlags flags);
	alias da_igTempInputScalar = bool function (const ImRect bb,ImGuiID id,const (char)* label,ImGuiDataType data_type,void* p_data,const (char)* format,const void* p_clamp_min,const void* p_clamp_max);
	alias da_igTempInputIsActive = bool function (ImGuiID id);
	alias da_igGetInputTextState = ImGuiInputTextState* function (ImGuiID id);
	alias da_igColorTooltip = void function (const (char)* text,const float* col,ImGuiColorEditFlags flags);
	alias da_igColorEditOptionsPopup = void function (const float* col,ImGuiColorEditFlags flags);
	alias da_igColorPickerOptionsPopup = void function (const float* ref_col,ImGuiColorEditFlags flags);
	alias da_igPlotEx = int function (ImGuiPlotType plot_type,const (char)* label,float function(void* data,int idx) values_getter,void* data,int values_count,int values_offset,const (char)* overlay_text,float scale_min,float scale_max,ImVec2 frame_size);
	alias da_igShadeVertsLinearColorGradientKeepAlpha = void function (ImDrawList* draw_list,int vert_start_idx,int vert_end_idx,ImVec2 gradient_p0,ImVec2 gradient_p1,ImU32 col0,ImU32 col1);
	alias da_igShadeVertsLinearUV = void function (ImDrawList* draw_list,int vert_start_idx,int vert_end_idx,const ImVec2 a,const ImVec2 b,const ImVec2 uv_a,const ImVec2 uv_b,bool clamp);
	alias da_igGcCompactTransientWindowBuffers = void function (ImGuiWindow* window);
	alias da_igGcAwakeTransientWindowBuffers = void function (ImGuiWindow* window);
	alias da_igDebugDrawItemRect = void function (ImU32 col);
	alias da_igDebugStartItemPicker = void function ();
	alias da_igImFontAtlasBuildWithStbTruetype = bool function (ImFontAtlas* atlas);
	alias da_igImFontAtlasBuildInit = void function (ImFontAtlas* atlas);
	alias da_igImFontAtlasBuildSetupFont = void function (ImFontAtlas* atlas,ImFont* font,ImFontConfig* font_config,float ascent,float descent);
	alias da_igImFontAtlasBuildPackCustomRects = void function (ImFontAtlas* atlas,void* stbrp_context_opaque);
	alias da_igImFontAtlasBuildFinish = void function (ImFontAtlas* atlas);
	alias da_igImFontAtlasBuildRender1bppRectFromString = void function (ImFontAtlas* atlas,int atlas_x,int atlas_y,int w,int h,const (char)* in_str,char in_marker_char,ubyte in_marker_pixel_value);
	alias da_igImFontAtlasBuildMultiplyCalcLookupTable = void function (ubyte * out_table,float in_multiply_factor);
	alias da_igImFontAtlasBuildMultiplyRectAlpha8 = void function (const ubyte * table,ubyte* pixels,int x,int y,int w,int h,int stride);
	alias da_igLogText = void function (CONST char *fmt, ...);
	alias da_ImGuiTextBuffer_appendf = void function ( ImGuiTextBuffer *buffer, const char *fmt, ...);
	alias da_igGET_FLT_MAX = float function ();
	alias da_ImVector_ImWchar_create = ImVector_ImWchar* function ();
	alias da_ImVector_ImWchar_destroy = void function (ImVector_ImWchar* self);
	alias da_ImVector_ImWchar_Init = void function (ImVector_ImWchar* p);
	alias da_ImVector_ImWchar_UnInit = void function (ImVector_ImWchar* p);
	
}
__gshared
{	da_ImVec2_ImVec2Nil ImVec2_ImVec2Nil;
	da_ImVec2_destroy ImVec2_destroy;
	da_ImVec2_ImVec2Float ImVec2_ImVec2Float;
	da_ImVec4_ImVec4Nil ImVec4_ImVec4Nil;
	da_ImVec4_destroy ImVec4_destroy;
	da_ImVec4_ImVec4Float ImVec4_ImVec4Float;
	da_igCreateContext igCreateContext;
	da_igDestroyContext igDestroyContext;
	da_igGetCurrentContext igGetCurrentContext;
	da_igSetCurrentContext igSetCurrentContext;
	da_igGetIO igGetIO;
	da_igGetStyle igGetStyle;
	da_igNewFrame igNewFrame;
	da_igEndFrame igEndFrame;
	da_igRender igRender;
	da_igGetDrawData igGetDrawData;
	da_igShowDemoWindow igShowDemoWindow;
	da_igShowAboutWindow igShowAboutWindow;
	da_igShowMetricsWindow igShowMetricsWindow;
	da_igShowStyleEditor igShowStyleEditor;
	da_igShowStyleSelector igShowStyleSelector;
	da_igShowFontSelector igShowFontSelector;
	da_igShowUserGuide igShowUserGuide;
	da_igGetVersion igGetVersion;
	da_igStyleColorsDark igStyleColorsDark;
	da_igStyleColorsClassic igStyleColorsClassic;
	da_igStyleColorsLight igStyleColorsLight;
	da_igBegin igBegin;
	da_igEnd igEnd;
	da_igBeginChildStr igBeginChildStr;
	da_igBeginChildID igBeginChildID;
	da_igEndChild igEndChild;
	da_igIsWindowAppearing igIsWindowAppearing;
	da_igIsWindowCollapsed igIsWindowCollapsed;
	da_igIsWindowFocused igIsWindowFocused;
	da_igIsWindowHovered igIsWindowHovered;
	da_igGetWindowDrawList igGetWindowDrawList;
	da_igGetWindowDpiScale igGetWindowDpiScale;
	da_igGetWindowViewport igGetWindowViewport;
	da_igGetWindowPos igGetWindowPos;
	da_igGetWindowSize igGetWindowSize;
	da_igGetWindowWidth igGetWindowWidth;
	da_igGetWindowHeight igGetWindowHeight;
	da_igSetNextWindowPos igSetNextWindowPos;
	da_igSetNextWindowSize igSetNextWindowSize;
	da_igSetNextWindowSizeConstraints igSetNextWindowSizeConstraints;
	da_igSetNextWindowContentSize igSetNextWindowContentSize;
	da_igSetNextWindowCollapsed igSetNextWindowCollapsed;
	da_igSetNextWindowFocus igSetNextWindowFocus;
	da_igSetNextWindowBgAlpha igSetNextWindowBgAlpha;
	da_igSetNextWindowViewport igSetNextWindowViewport;
	da_igSetWindowPosVec2 igSetWindowPosVec2;
	da_igSetWindowSizeVec2 igSetWindowSizeVec2;
	da_igSetWindowCollapsedBool igSetWindowCollapsedBool;
	da_igSetWindowFocusNil igSetWindowFocusNil;
	da_igSetWindowFontScale igSetWindowFontScale;
	da_igSetWindowPosStr igSetWindowPosStr;
	da_igSetWindowSizeStr igSetWindowSizeStr;
	da_igSetWindowCollapsedStr igSetWindowCollapsedStr;
	da_igSetWindowFocusStr igSetWindowFocusStr;
	da_igGetContentRegionMax igGetContentRegionMax;
	da_igGetContentRegionAvail igGetContentRegionAvail;
	da_igGetWindowContentRegionMin igGetWindowContentRegionMin;
	da_igGetWindowContentRegionMax igGetWindowContentRegionMax;
	da_igGetWindowContentRegionWidth igGetWindowContentRegionWidth;
	da_igGetScrollX igGetScrollX;
	da_igGetScrollY igGetScrollY;
	da_igGetScrollMaxX igGetScrollMaxX;
	da_igGetScrollMaxY igGetScrollMaxY;
	da_igSetScrollXFloat igSetScrollXFloat;
	da_igSetScrollYFloat igSetScrollYFloat;
	da_igSetScrollHereX igSetScrollHereX;
	da_igSetScrollHereY igSetScrollHereY;
	da_igSetScrollFromPosXFloat igSetScrollFromPosXFloat;
	da_igSetScrollFromPosYFloat igSetScrollFromPosYFloat;
	da_igPushFont igPushFont;
	da_igPopFont igPopFont;
	da_igPushStyleColorU32 igPushStyleColorU32;
	da_igPushStyleColorVec4 igPushStyleColorVec4;
	da_igPopStyleColor igPopStyleColor;
	da_igPushStyleVarFloat igPushStyleVarFloat;
	da_igPushStyleVarVec2 igPushStyleVarVec2;
	da_igPopStyleVar igPopStyleVar;
	da_igGetStyleColorVec4 igGetStyleColorVec4;
	da_igGetFont igGetFont;
	da_igGetFontSize igGetFontSize;
	da_igGetFontTexUvWhitePixel igGetFontTexUvWhitePixel;
	da_igGetColorU32Col igGetColorU32Col;
	da_igGetColorU32Vec4 igGetColorU32Vec4;
	da_igGetColorU32U32 igGetColorU32U32;
	da_igPushItemWidth igPushItemWidth;
	da_igPopItemWidth igPopItemWidth;
	da_igSetNextItemWidth igSetNextItemWidth;
	da_igCalcItemWidth igCalcItemWidth;
	da_igPushTextWrapPos igPushTextWrapPos;
	da_igPopTextWrapPos igPopTextWrapPos;
	da_igPushAllowKeyboardFocus igPushAllowKeyboardFocus;
	da_igPopAllowKeyboardFocus igPopAllowKeyboardFocus;
	da_igPushButtonRepeat igPushButtonRepeat;
	da_igPopButtonRepeat igPopButtonRepeat;
	da_igSeparator igSeparator;
	da_igSameLine igSameLine;
	da_igNewLine igNewLine;
	da_igSpacing igSpacing;
	da_igDummy igDummy;
	da_igIndent igIndent;
	da_igUnindent igUnindent;
	da_igBeginGroup igBeginGroup;
	da_igEndGroup igEndGroup;
	da_igGetCursorPos igGetCursorPos;
	da_igGetCursorPosX igGetCursorPosX;
	da_igGetCursorPosY igGetCursorPosY;
	da_igSetCursorPos igSetCursorPos;
	da_igSetCursorPosX igSetCursorPosX;
	da_igSetCursorPosY igSetCursorPosY;
	da_igGetCursorStartPos igGetCursorStartPos;
	da_igGetCursorScreenPos igGetCursorScreenPos;
	da_igSetCursorScreenPos igSetCursorScreenPos;
	da_igAlignTextToFramePadding igAlignTextToFramePadding;
	da_igGetTextLineHeight igGetTextLineHeight;
	da_igGetTextLineHeightWithSpacing igGetTextLineHeightWithSpacing;
	da_igGetFrameHeight igGetFrameHeight;
	da_igGetFrameHeightWithSpacing igGetFrameHeightWithSpacing;
	da_igPushIDStr igPushIDStr;
	da_igPushIDStrStr igPushIDStrStr;
	da_igPushIDPtr igPushIDPtr;
	da_igPushIDInt igPushIDInt;
	da_igPopID igPopID;
	da_igGetIDStr igGetIDStr;
	da_igGetIDStrStr igGetIDStrStr;
	da_igGetIDPtr igGetIDPtr;
	da_igTextUnformatted igTextUnformatted;
	da_igText igText;
	da_igTextV igTextV;
	da_igTextColored igTextColored;
	da_igTextColoredV igTextColoredV;
	da_igTextDisabled igTextDisabled;
	da_igTextDisabledV igTextDisabledV;
	da_igTextWrapped igTextWrapped;
	da_igTextWrappedV igTextWrappedV;
	da_igLabelText igLabelText;
	da_igLabelTextV igLabelTextV;
	da_igBulletText igBulletText;
	da_igBulletTextV igBulletTextV;
	da_igButton igButton;
	da_igSmallButton igSmallButton;
	da_igInvisibleButton igInvisibleButton;
	da_igArrowButton igArrowButton;
	da_igImage igImage;
	da_igImageButton igImageButton;
	da_igCheckbox igCheckbox;
	da_igCheckboxFlags igCheckboxFlags;
	da_igRadioButtonBool igRadioButtonBool;
	da_igRadioButtonIntPtr igRadioButtonIntPtr;
	da_igProgressBar igProgressBar;
	da_igBullet igBullet;
	da_igBeginCombo igBeginCombo;
	da_igEndCombo igEndCombo;
	da_igComboStr_arr igComboStr_arr;
	da_igComboStr igComboStr;
	da_igComboFnBoolPtr igComboFnBoolPtr;
	da_igDragFloat igDragFloat;
	da_igDragFloat2 igDragFloat2;
	da_igDragFloat3 igDragFloat3;
	da_igDragFloat4 igDragFloat4;
	da_igDragFloatRange2 igDragFloatRange2;
	da_igDragInt igDragInt;
	da_igDragInt2 igDragInt2;
	da_igDragInt3 igDragInt3;
	da_igDragInt4 igDragInt4;
	da_igDragIntRange2 igDragIntRange2;
	da_igDragScalar igDragScalar;
	da_igDragScalarN igDragScalarN;
	da_igSliderFloat igSliderFloat;
	da_igSliderFloat2 igSliderFloat2;
	da_igSliderFloat3 igSliderFloat3;
	da_igSliderFloat4 igSliderFloat4;
	da_igSliderAngle igSliderAngle;
	da_igSliderInt igSliderInt;
	da_igSliderInt2 igSliderInt2;
	da_igSliderInt3 igSliderInt3;
	da_igSliderInt4 igSliderInt4;
	da_igSliderScalar igSliderScalar;
	da_igSliderScalarN igSliderScalarN;
	da_igVSliderFloat igVSliderFloat;
	da_igVSliderInt igVSliderInt;
	da_igVSliderScalar igVSliderScalar;
	da_igInputText igInputText;
	da_igInputTextMultiline igInputTextMultiline;
	da_igInputTextWithHint igInputTextWithHint;
	da_igInputFloat igInputFloat;
	da_igInputFloat2 igInputFloat2;
	da_igInputFloat3 igInputFloat3;
	da_igInputFloat4 igInputFloat4;
	da_igInputInt igInputInt;
	da_igInputInt2 igInputInt2;
	da_igInputInt3 igInputInt3;
	da_igInputInt4 igInputInt4;
	da_igInputDouble igInputDouble;
	da_igInputScalar igInputScalar;
	da_igInputScalarN igInputScalarN;
	da_igColorEdit3 igColorEdit3;
	da_igColorEdit4 igColorEdit4;
	da_igColorPicker3 igColorPicker3;
	da_igColorPicker4 igColorPicker4;
	da_igColorButton igColorButton;
	da_igSetColorEditOptions igSetColorEditOptions;
	da_igTreeNodeStr igTreeNodeStr;
	da_igTreeNodeStrStr igTreeNodeStrStr;
	da_igTreeNodePtr igTreeNodePtr;
	da_igTreeNodeVStr igTreeNodeVStr;
	da_igTreeNodeVPtr igTreeNodeVPtr;
	da_igTreeNodeExStr igTreeNodeExStr;
	da_igTreeNodeExStrStr igTreeNodeExStrStr;
	da_igTreeNodeExPtr igTreeNodeExPtr;
	da_igTreeNodeExVStr igTreeNodeExVStr;
	da_igTreeNodeExVPtr igTreeNodeExVPtr;
	da_igTreePushStr igTreePushStr;
	da_igTreePushPtr igTreePushPtr;
	da_igTreePop igTreePop;
	da_igGetTreeNodeToLabelSpacing igGetTreeNodeToLabelSpacing;
	da_igCollapsingHeaderTreeNodeFlags igCollapsingHeaderTreeNodeFlags;
	da_igCollapsingHeaderBoolPtr igCollapsingHeaderBoolPtr;
	da_igSetNextItemOpen igSetNextItemOpen;
	da_igSelectableBool igSelectableBool;
	da_igSelectableBoolPtr igSelectableBoolPtr;
	da_igListBoxStr_arr igListBoxStr_arr;
	da_igListBoxFnBoolPtr igListBoxFnBoolPtr;
	da_igListBoxHeaderVec2 igListBoxHeaderVec2;
	da_igListBoxHeaderInt igListBoxHeaderInt;
	da_igListBoxFooter igListBoxFooter;
	da_igPlotLinesFloatPtr igPlotLinesFloatPtr;
	da_igPlotLinesFnFloatPtr igPlotLinesFnFloatPtr;
	da_igPlotHistogramFloatPtr igPlotHistogramFloatPtr;
	da_igPlotHistogramFnFloatPtr igPlotHistogramFnFloatPtr;
	da_igValueBool igValueBool;
	da_igValueInt igValueInt;
	da_igValueUint igValueUint;
	da_igValueFloat igValueFloat;
	da_igBeginMenuBar igBeginMenuBar;
	da_igEndMenuBar igEndMenuBar;
	da_igBeginMainMenuBar igBeginMainMenuBar;
	da_igEndMainMenuBar igEndMainMenuBar;
	da_igBeginMenu igBeginMenu;
	da_igEndMenu igEndMenu;
	da_igMenuItemBool igMenuItemBool;
	da_igMenuItemBoolPtr igMenuItemBoolPtr;
	da_igBeginTooltip igBeginTooltip;
	da_igEndTooltip igEndTooltip;
	da_igSetTooltip igSetTooltip;
	da_igSetTooltipV igSetTooltipV;
	da_igBeginPopup igBeginPopup;
	da_igBeginPopupModal igBeginPopupModal;
	da_igEndPopup igEndPopup;
	da_igOpenPopup igOpenPopup;
	da_igOpenPopupContextItem igOpenPopupContextItem;
	da_igCloseCurrentPopup igCloseCurrentPopup;
	da_igBeginPopupContextItem igBeginPopupContextItem;
	da_igBeginPopupContextWindow igBeginPopupContextWindow;
	da_igBeginPopupContextVoid igBeginPopupContextVoid;
	da_igIsPopupOpenStr igIsPopupOpenStr;
	da_igColumns igColumns;
	da_igNextColumn igNextColumn;
	da_igGetColumnIndex igGetColumnIndex;
	da_igGetColumnWidth igGetColumnWidth;
	da_igSetColumnWidth igSetColumnWidth;
	da_igGetColumnOffset igGetColumnOffset;
	da_igSetColumnOffset igSetColumnOffset;
	da_igGetColumnsCount igGetColumnsCount;
	da_igBeginTabBar igBeginTabBar;
	da_igEndTabBar igEndTabBar;
	da_igBeginTabItem igBeginTabItem;
	da_igEndTabItem igEndTabItem;
	da_igSetTabItemClosed igSetTabItemClosed;
	da_igDockSpace igDockSpace;
	da_igDockSpaceOverViewport igDockSpaceOverViewport;
	da_igSetNextWindowDockID igSetNextWindowDockID;
	da_igSetNextWindowClass igSetNextWindowClass;
	da_igGetWindowDockID igGetWindowDockID;
	da_igIsWindowDocked igIsWindowDocked;
	da_igLogToTTY igLogToTTY;
	da_igLogToFile igLogToFile;
	da_igLogToClipboard igLogToClipboard;
	da_igLogFinish igLogFinish;
	da_igLogButtons igLogButtons;
	da_igBeginDragDropSource igBeginDragDropSource;
	da_igSetDragDropPayload igSetDragDropPayload;
	da_igEndDragDropSource igEndDragDropSource;
	da_igBeginDragDropTarget igBeginDragDropTarget;
	da_igAcceptDragDropPayload igAcceptDragDropPayload;
	da_igEndDragDropTarget igEndDragDropTarget;
	da_igGetDragDropPayload igGetDragDropPayload;
	da_igPushClipRect igPushClipRect;
	da_igPopClipRect igPopClipRect;
	da_igSetItemDefaultFocus igSetItemDefaultFocus;
	da_igSetKeyboardFocusHere igSetKeyboardFocusHere;
	da_igIsItemHovered igIsItemHovered;
	da_igIsItemActive igIsItemActive;
	da_igIsItemFocused igIsItemFocused;
	da_igIsItemClicked igIsItemClicked;
	da_igIsItemVisible igIsItemVisible;
	da_igIsItemEdited igIsItemEdited;
	da_igIsItemActivated igIsItemActivated;
	da_igIsItemDeactivated igIsItemDeactivated;
	da_igIsItemDeactivatedAfterEdit igIsItemDeactivatedAfterEdit;
	da_igIsItemToggledOpen igIsItemToggledOpen;
	da_igIsAnyItemHovered igIsAnyItemHovered;
	da_igIsAnyItemActive igIsAnyItemActive;
	da_igIsAnyItemFocused igIsAnyItemFocused;
	da_igGetItemRectMin igGetItemRectMin;
	da_igGetItemRectMax igGetItemRectMax;
	da_igGetItemRectSize igGetItemRectSize;
	da_igSetItemAllowOverlap igSetItemAllowOverlap;
	da_igIsRectVisibleNil igIsRectVisibleNil;
	da_igIsRectVisibleVec2 igIsRectVisibleVec2;
	da_igGetTime igGetTime;
	da_igGetFrameCount igGetFrameCount;
	da_igGetBackgroundDrawListNil igGetBackgroundDrawListNil;
	da_igGetForegroundDrawListNil igGetForegroundDrawListNil;
	da_igGetBackgroundDrawListViewportPtr igGetBackgroundDrawListViewportPtr;
	da_igGetForegroundDrawListViewportPtr igGetForegroundDrawListViewportPtr;
	da_igGetDrawListSharedData igGetDrawListSharedData;
	da_igGetStyleColorName igGetStyleColorName;
	da_igSetStateStorage igSetStateStorage;
	da_igGetStateStorage igGetStateStorage;
	da_igCalcListClipping igCalcListClipping;
	da_igBeginChildFrame igBeginChildFrame;
	da_igEndChildFrame igEndChildFrame;
	da_igCalcTextSize igCalcTextSize;
	da_igColorConvertU32ToFloat4 igColorConvertU32ToFloat4;
	da_igColorConvertFloat4ToU32 igColorConvertFloat4ToU32;
	da_igColorConvertRGBtoHSV igColorConvertRGBtoHSV;
	da_igColorConvertHSVtoRGB igColorConvertHSVtoRGB;
	da_igGetKeyIndex igGetKeyIndex;
	da_igIsKeyDown igIsKeyDown;
	da_igIsKeyPressed igIsKeyPressed;
	da_igIsKeyReleased igIsKeyReleased;
	da_igGetKeyPressedAmount igGetKeyPressedAmount;
	da_igCaptureKeyboardFromApp igCaptureKeyboardFromApp;
	da_igIsMouseDown igIsMouseDown;
	da_igIsMouseClicked igIsMouseClicked;
	da_igIsMouseReleased igIsMouseReleased;
	da_igIsMouseDoubleClicked igIsMouseDoubleClicked;
	da_igIsMouseHoveringRect igIsMouseHoveringRect;
	da_igIsMousePosValid igIsMousePosValid;
	da_igIsAnyMouseDown igIsAnyMouseDown;
	da_igGetMousePos igGetMousePos;
	da_igGetMousePosOnOpeningCurrentPopup igGetMousePosOnOpeningCurrentPopup;
	da_igIsMouseDragging igIsMouseDragging;
	da_igGetMouseDragDelta igGetMouseDragDelta;
	da_igResetMouseDragDelta igResetMouseDragDelta;
	da_igGetMouseCursor igGetMouseCursor;
	da_igSetMouseCursor igSetMouseCursor;
	da_igCaptureMouseFromApp igCaptureMouseFromApp;
	da_igGetClipboardText igGetClipboardText;
	da_igSetClipboardText igSetClipboardText;
	da_igLoadIniSettingsFromDisk igLoadIniSettingsFromDisk;
	da_igLoadIniSettingsFromMemory igLoadIniSettingsFromMemory;
	da_igSaveIniSettingsToDisk igSaveIniSettingsToDisk;
	da_igSaveIniSettingsToMemory igSaveIniSettingsToMemory;
	da_igDebugCheckVersionAndDataLayout igDebugCheckVersionAndDataLayout;
	da_igSetAllocatorFunctions igSetAllocatorFunctions;
	da_igMemAlloc igMemAlloc;
	da_igMemFree igMemFree;
	da_igGetPlatformIO igGetPlatformIO;
	da_igGetMainViewport igGetMainViewport;
	da_igUpdatePlatformWindows igUpdatePlatformWindows;
	da_igRenderPlatformWindowsDefault igRenderPlatformWindowsDefault;
	da_igDestroyPlatformWindows igDestroyPlatformWindows;
	da_igFindViewportByID igFindViewportByID;
	da_igFindViewportByPlatformHandle igFindViewportByPlatformHandle;
	da_ImGuiStyle_ImGuiStyle ImGuiStyle_ImGuiStyle;
	da_ImGuiStyle_destroy ImGuiStyle_destroy;
	da_ImGuiStyle_ScaleAllSizes ImGuiStyle_ScaleAllSizes;
	da_ImGuiIO_AddInputCharacter ImGuiIO_AddInputCharacter;
	da_ImGuiIO_AddInputCharacterUTF16 ImGuiIO_AddInputCharacterUTF16;
	da_ImGuiIO_AddInputCharactersUTF8 ImGuiIO_AddInputCharactersUTF8;
	da_ImGuiIO_ClearInputCharacters ImGuiIO_ClearInputCharacters;
	da_ImGuiIO_ImGuiIO ImGuiIO_ImGuiIO;
	da_ImGuiIO_destroy ImGuiIO_destroy;
	da_ImGuiInputTextCallbackData_ImGuiInputTextCallbackData ImGuiInputTextCallbackData_ImGuiInputTextCallbackData;
	da_ImGuiInputTextCallbackData_destroy ImGuiInputTextCallbackData_destroy;
	da_ImGuiInputTextCallbackData_DeleteChars ImGuiInputTextCallbackData_DeleteChars;
	da_ImGuiInputTextCallbackData_InsertChars ImGuiInputTextCallbackData_InsertChars;
	da_ImGuiInputTextCallbackData_HasSelection ImGuiInputTextCallbackData_HasSelection;
	da_ImGuiWindowClass_ImGuiWindowClass ImGuiWindowClass_ImGuiWindowClass;
	da_ImGuiWindowClass_destroy ImGuiWindowClass_destroy;
	da_ImGuiPayload_ImGuiPayload ImGuiPayload_ImGuiPayload;
	da_ImGuiPayload_destroy ImGuiPayload_destroy;
	da_ImGuiPayload_Clear ImGuiPayload_Clear;
	da_ImGuiPayload_IsDataType ImGuiPayload_IsDataType;
	da_ImGuiPayload_IsPreview ImGuiPayload_IsPreview;
	da_ImGuiPayload_IsDelivery ImGuiPayload_IsDelivery;
	da_ImGuiOnceUponAFrame_ImGuiOnceUponAFrame ImGuiOnceUponAFrame_ImGuiOnceUponAFrame;
	da_ImGuiOnceUponAFrame_destroy ImGuiOnceUponAFrame_destroy;
	da_ImGuiTextFilter_ImGuiTextFilter ImGuiTextFilter_ImGuiTextFilter;
	da_ImGuiTextFilter_destroy ImGuiTextFilter_destroy;
	da_ImGuiTextFilter_Draw ImGuiTextFilter_Draw;
	da_ImGuiTextFilter_PassFilter ImGuiTextFilter_PassFilter;
	da_ImGuiTextFilter_Build ImGuiTextFilter_Build;
	da_ImGuiTextFilter_Clear ImGuiTextFilter_Clear;
	da_ImGuiTextFilter_IsActive ImGuiTextFilter_IsActive;
	da_ImGuiTextRange_ImGuiTextRangeNil ImGuiTextRange_ImGuiTextRangeNil;
	da_ImGuiTextRange_destroy ImGuiTextRange_destroy;
	da_ImGuiTextRange_ImGuiTextRangeStr ImGuiTextRange_ImGuiTextRangeStr;
	da_ImGuiTextRange_empty ImGuiTextRange_empty;
	da_ImGuiTextRange_split ImGuiTextRange_split;
	da_ImGuiTextBuffer_ImGuiTextBuffer ImGuiTextBuffer_ImGuiTextBuffer;
	da_ImGuiTextBuffer_destroy ImGuiTextBuffer_destroy;
	da_ImGuiTextBuffer_begin ImGuiTextBuffer_begin;
	da_ImGuiTextBuffer_end ImGuiTextBuffer_end;
	da_ImGuiTextBuffer_size ImGuiTextBuffer_size;
	da_ImGuiTextBuffer_empty ImGuiTextBuffer_empty;
	da_ImGuiTextBuffer_clear ImGuiTextBuffer_clear;
	da_ImGuiTextBuffer_reserve ImGuiTextBuffer_reserve;
	da_ImGuiTextBuffer_c_str ImGuiTextBuffer_c_str;
	da_ImGuiTextBuffer_append ImGuiTextBuffer_append;
	da_ImGuiTextBuffer_appendfv ImGuiTextBuffer_appendfv;
	da_ImGuiStoragePair_ImGuiStoragePairInt ImGuiStoragePair_ImGuiStoragePairInt;
	da_ImGuiStoragePair_destroy ImGuiStoragePair_destroy;
	da_ImGuiStoragePair_ImGuiStoragePairFloat ImGuiStoragePair_ImGuiStoragePairFloat;
	da_ImGuiStoragePair_ImGuiStoragePairPtr ImGuiStoragePair_ImGuiStoragePairPtr;
	da_ImGuiStorage_Clear ImGuiStorage_Clear;
	da_ImGuiStorage_GetInt ImGuiStorage_GetInt;
	da_ImGuiStorage_SetInt ImGuiStorage_SetInt;
	da_ImGuiStorage_GetBool ImGuiStorage_GetBool;
	da_ImGuiStorage_SetBool ImGuiStorage_SetBool;
	da_ImGuiStorage_GetFloat ImGuiStorage_GetFloat;
	da_ImGuiStorage_SetFloat ImGuiStorage_SetFloat;
	da_ImGuiStorage_GetVoidPtr ImGuiStorage_GetVoidPtr;
	da_ImGuiStorage_SetVoidPtr ImGuiStorage_SetVoidPtr;
	da_ImGuiStorage_GetIntRef ImGuiStorage_GetIntRef;
	da_ImGuiStorage_GetBoolRef ImGuiStorage_GetBoolRef;
	da_ImGuiStorage_GetFloatRef ImGuiStorage_GetFloatRef;
	da_ImGuiStorage_GetVoidPtrRef ImGuiStorage_GetVoidPtrRef;
	da_ImGuiStorage_SetAllInt ImGuiStorage_SetAllInt;
	da_ImGuiStorage_BuildSortByKey ImGuiStorage_BuildSortByKey;
	da_ImGuiListClipper_ImGuiListClipper ImGuiListClipper_ImGuiListClipper;
	da_ImGuiListClipper_destroy ImGuiListClipper_destroy;
	da_ImGuiListClipper_Step ImGuiListClipper_Step;
	da_ImGuiListClipper_Begin ImGuiListClipper_Begin;
	da_ImGuiListClipper_End ImGuiListClipper_End;
	da_ImColor_ImColorNil ImColor_ImColorNil;
	da_ImColor_destroy ImColor_destroy;
	da_ImColor_ImColorInt ImColor_ImColorInt;
	da_ImColor_ImColorU32 ImColor_ImColorU32;
	da_ImColor_ImColorFloat ImColor_ImColorFloat;
	da_ImColor_ImColorVec4 ImColor_ImColorVec4;
	da_ImColor_SetHSV ImColor_SetHSV;
	da_ImColor_HSV ImColor_HSV;
	da_ImDrawCmd_ImDrawCmd ImDrawCmd_ImDrawCmd;
	da_ImDrawCmd_destroy ImDrawCmd_destroy;
	da_ImDrawListSplitter_ImDrawListSplitter ImDrawListSplitter_ImDrawListSplitter;
	da_ImDrawListSplitter_destroy ImDrawListSplitter_destroy;
	da_ImDrawListSplitter_Clear ImDrawListSplitter_Clear;
	da_ImDrawListSplitter_ClearFreeMemory ImDrawListSplitter_ClearFreeMemory;
	da_ImDrawListSplitter_Split ImDrawListSplitter_Split;
	da_ImDrawListSplitter_Merge ImDrawListSplitter_Merge;
	da_ImDrawListSplitter_SetCurrentChannel ImDrawListSplitter_SetCurrentChannel;
	da_ImDrawList_ImDrawList ImDrawList_ImDrawList;
	da_ImDrawList_destroy ImDrawList_destroy;
	da_ImDrawList_PushClipRect ImDrawList_PushClipRect;
	da_ImDrawList_PushClipRectFullScreen ImDrawList_PushClipRectFullScreen;
	da_ImDrawList_PopClipRect ImDrawList_PopClipRect;
	da_ImDrawList_PushTextureID ImDrawList_PushTextureID;
	da_ImDrawList_PopTextureID ImDrawList_PopTextureID;
	da_ImDrawList_GetClipRectMin ImDrawList_GetClipRectMin;
	da_ImDrawList_GetClipRectMax ImDrawList_GetClipRectMax;
	da_ImDrawList_AddLine ImDrawList_AddLine;
	da_ImDrawList_AddRect ImDrawList_AddRect;
	da_ImDrawList_AddRectFilled ImDrawList_AddRectFilled;
	da_ImDrawList_AddRectFilledMultiColor ImDrawList_AddRectFilledMultiColor;
	da_ImDrawList_AddQuad ImDrawList_AddQuad;
	da_ImDrawList_AddQuadFilled ImDrawList_AddQuadFilled;
	da_ImDrawList_AddTriangle ImDrawList_AddTriangle;
	da_ImDrawList_AddTriangleFilled ImDrawList_AddTriangleFilled;
	da_ImDrawList_AddCircle ImDrawList_AddCircle;
	da_ImDrawList_AddCircleFilled ImDrawList_AddCircleFilled;
	da_ImDrawList_AddNgon ImDrawList_AddNgon;
	da_ImDrawList_AddNgonFilled ImDrawList_AddNgonFilled;
	da_ImDrawList_AddTextVec2 ImDrawList_AddTextVec2;
	da_ImDrawList_AddTextFontPtr ImDrawList_AddTextFontPtr;
	da_ImDrawList_AddPolyline ImDrawList_AddPolyline;
	da_ImDrawList_AddConvexPolyFilled ImDrawList_AddConvexPolyFilled;
	da_ImDrawList_AddBezierCurve ImDrawList_AddBezierCurve;
	da_ImDrawList_AddImage ImDrawList_AddImage;
	da_ImDrawList_AddImageQuad ImDrawList_AddImageQuad;
	da_ImDrawList_AddImageRounded ImDrawList_AddImageRounded;
	da_ImDrawList_PathClear ImDrawList_PathClear;
	da_ImDrawList_PathLineTo ImDrawList_PathLineTo;
	da_ImDrawList_PathLineToMergeDuplicate ImDrawList_PathLineToMergeDuplicate;
	da_ImDrawList_PathFillConvex ImDrawList_PathFillConvex;
	da_ImDrawList_PathStroke ImDrawList_PathStroke;
	da_ImDrawList_PathArcTo ImDrawList_PathArcTo;
	da_ImDrawList_PathArcToFast ImDrawList_PathArcToFast;
	da_ImDrawList_PathBezierCurveTo ImDrawList_PathBezierCurveTo;
	da_ImDrawList_PathRect ImDrawList_PathRect;
	da_ImDrawList_AddCallback ImDrawList_AddCallback;
	da_ImDrawList_AddDrawCmd ImDrawList_AddDrawCmd;
	da_ImDrawList_CloneOutput ImDrawList_CloneOutput;
	da_ImDrawList_ChannelsSplit ImDrawList_ChannelsSplit;
	da_ImDrawList_ChannelsMerge ImDrawList_ChannelsMerge;
	da_ImDrawList_ChannelsSetCurrent ImDrawList_ChannelsSetCurrent;
	da_ImDrawList_PrimReserve ImDrawList_PrimReserve;
	da_ImDrawList_PrimUnreserve ImDrawList_PrimUnreserve;
	da_ImDrawList_PrimRect ImDrawList_PrimRect;
	da_ImDrawList_PrimRectUV ImDrawList_PrimRectUV;
	da_ImDrawList_PrimQuadUV ImDrawList_PrimQuadUV;
	da_ImDrawList_PrimWriteVtx ImDrawList_PrimWriteVtx;
	da_ImDrawList_PrimWriteIdx ImDrawList_PrimWriteIdx;
	da_ImDrawList_PrimVtx ImDrawList_PrimVtx;
	da_ImDrawList__ResetForNewFrame ImDrawList__ResetForNewFrame;
	da_ImDrawList__ClearFreeMemory ImDrawList__ClearFreeMemory;
	da_ImDrawList__PopUnusedDrawCmd ImDrawList__PopUnusedDrawCmd;
	da_ImDrawList__OnChangedClipRect ImDrawList__OnChangedClipRect;
	da_ImDrawList__OnChangedTextureID ImDrawList__OnChangedTextureID;
	da_ImDrawList__OnChangedVtxOffset ImDrawList__OnChangedVtxOffset;
	da_ImDrawData_ImDrawData ImDrawData_ImDrawData;
	da_ImDrawData_destroy ImDrawData_destroy;
	da_ImDrawData_Clear ImDrawData_Clear;
	da_ImDrawData_DeIndexAllBuffers ImDrawData_DeIndexAllBuffers;
	da_ImDrawData_ScaleClipRects ImDrawData_ScaleClipRects;
	da_ImFontConfig_ImFontConfig ImFontConfig_ImFontConfig;
	da_ImFontConfig_destroy ImFontConfig_destroy;
	da_ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder;
	da_ImFontGlyphRangesBuilder_destroy ImFontGlyphRangesBuilder_destroy;
	da_ImFontGlyphRangesBuilder_Clear ImFontGlyphRangesBuilder_Clear;
	da_ImFontGlyphRangesBuilder_GetBit ImFontGlyphRangesBuilder_GetBit;
	da_ImFontGlyphRangesBuilder_SetBit ImFontGlyphRangesBuilder_SetBit;
	da_ImFontGlyphRangesBuilder_AddChar ImFontGlyphRangesBuilder_AddChar;
	da_ImFontGlyphRangesBuilder_AddText ImFontGlyphRangesBuilder_AddText;
	da_ImFontGlyphRangesBuilder_AddRanges ImFontGlyphRangesBuilder_AddRanges;
	da_ImFontGlyphRangesBuilder_BuildRanges ImFontGlyphRangesBuilder_BuildRanges;
	da_ImFontAtlasCustomRect_ImFontAtlasCustomRect ImFontAtlasCustomRect_ImFontAtlasCustomRect;
	da_ImFontAtlasCustomRect_destroy ImFontAtlasCustomRect_destroy;
	da_ImFontAtlasCustomRect_IsPacked ImFontAtlasCustomRect_IsPacked;
	da_ImFontAtlas_ImFontAtlas ImFontAtlas_ImFontAtlas;
	da_ImFontAtlas_destroy ImFontAtlas_destroy;
	da_ImFontAtlas_AddFont ImFontAtlas_AddFont;
	da_ImFontAtlas_AddFontDefault ImFontAtlas_AddFontDefault;
	da_ImFontAtlas_AddFontFromFileTTF ImFontAtlas_AddFontFromFileTTF;
	da_ImFontAtlas_AddFontFromMemoryTTF ImFontAtlas_AddFontFromMemoryTTF;
	da_ImFontAtlas_AddFontFromMemoryCompressedTTF ImFontAtlas_AddFontFromMemoryCompressedTTF;
	da_ImFontAtlas_AddFontFromMemoryCompressedBase85TTF ImFontAtlas_AddFontFromMemoryCompressedBase85TTF;
	da_ImFontAtlas_ClearInputData ImFontAtlas_ClearInputData;
	da_ImFontAtlas_ClearTexData ImFontAtlas_ClearTexData;
	da_ImFontAtlas_ClearFonts ImFontAtlas_ClearFonts;
	da_ImFontAtlas_Clear ImFontAtlas_Clear;
	da_ImFontAtlas_Build ImFontAtlas_Build;
	da_ImFontAtlas_GetTexDataAsAlpha8 ImFontAtlas_GetTexDataAsAlpha8;
	da_ImFontAtlas_GetTexDataAsRGBA32 ImFontAtlas_GetTexDataAsRGBA32;
	da_ImFontAtlas_IsBuilt ImFontAtlas_IsBuilt;
	da_ImFontAtlas_SetTexID ImFontAtlas_SetTexID;
	da_ImFontAtlas_GetGlyphRangesDefault ImFontAtlas_GetGlyphRangesDefault;
	da_ImFontAtlas_GetGlyphRangesKorean ImFontAtlas_GetGlyphRangesKorean;
	da_ImFontAtlas_GetGlyphRangesJapanese ImFontAtlas_GetGlyphRangesJapanese;
	da_ImFontAtlas_GetGlyphRangesChineseFull ImFontAtlas_GetGlyphRangesChineseFull;
	da_ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon;
	da_ImFontAtlas_GetGlyphRangesCyrillic ImFontAtlas_GetGlyphRangesCyrillic;
	da_ImFontAtlas_GetGlyphRangesThai ImFontAtlas_GetGlyphRangesThai;
	da_ImFontAtlas_GetGlyphRangesVietnamese ImFontAtlas_GetGlyphRangesVietnamese;
	da_ImFontAtlas_AddCustomRectRegular ImFontAtlas_AddCustomRectRegular;
	da_ImFontAtlas_AddCustomRectFontGlyph ImFontAtlas_AddCustomRectFontGlyph;
	da_ImFontAtlas_GetCustomRectByIndex ImFontAtlas_GetCustomRectByIndex;
	da_ImFontAtlas_CalcCustomRectUV ImFontAtlas_CalcCustomRectUV;
	da_ImFontAtlas_GetMouseCursorTexData ImFontAtlas_GetMouseCursorTexData;
	da_ImFont_ImFont ImFont_ImFont;
	da_ImFont_destroy ImFont_destroy;
	da_ImFont_FindGlyph ImFont_FindGlyph;
	da_ImFont_FindGlyphNoFallback ImFont_FindGlyphNoFallback;
	da_ImFont_GetCharAdvance ImFont_GetCharAdvance;
	da_ImFont_IsLoaded ImFont_IsLoaded;
	da_ImFont_GetDebugName ImFont_GetDebugName;
	da_ImFont_CalcTextSizeA ImFont_CalcTextSizeA;
	da_ImFont_CalcWordWrapPositionA ImFont_CalcWordWrapPositionA;
	da_ImFont_RenderChar ImFont_RenderChar;
	da_ImFont_RenderText ImFont_RenderText;
	da_ImFont_BuildLookupTable ImFont_BuildLookupTable;
	da_ImFont_ClearOutputData ImFont_ClearOutputData;
	da_ImFont_GrowIndex ImFont_GrowIndex;
	da_ImFont_AddGlyph ImFont_AddGlyph;
	da_ImFont_AddRemapChar ImFont_AddRemapChar;
	da_ImFont_SetGlyphVisible ImFont_SetGlyphVisible;
	da_ImFont_SetFallbackChar ImFont_SetFallbackChar;
	da_ImFont_IsGlyphRangeUnused ImFont_IsGlyphRangeUnused;
	da_ImGuiPlatformIO_ImGuiPlatformIO ImGuiPlatformIO_ImGuiPlatformIO;
	da_ImGuiPlatformIO_destroy ImGuiPlatformIO_destroy;
	da_ImGuiPlatformMonitor_ImGuiPlatformMonitor ImGuiPlatformMonitor_ImGuiPlatformMonitor;
	da_ImGuiPlatformMonitor_destroy ImGuiPlatformMonitor_destroy;
	da_ImGuiViewport_ImGuiViewport ImGuiViewport_ImGuiViewport;
	da_ImGuiViewport_destroy ImGuiViewport_destroy;
	da_ImGuiViewport_GetCenter ImGuiViewport_GetCenter;
	da_ImGuiViewport_GetWorkPos ImGuiViewport_GetWorkPos;
	da_ImGuiViewport_GetWorkSize ImGuiViewport_GetWorkSize;
	da_igImHashData igImHashData;
	da_igImHashStr igImHashStr;
	da_igImAlphaBlendColors igImAlphaBlendColors;
	da_igImIsPowerOfTwo igImIsPowerOfTwo;
	da_igImUpperPowerOfTwo igImUpperPowerOfTwo;
	da_igImStricmp igImStricmp;
	da_igImStrnicmp igImStrnicmp;
	da_igImStrncpy igImStrncpy;
	da_igImStrdup igImStrdup;
	da_igImStrdupcpy igImStrdupcpy;
	da_igImStrchrRange igImStrchrRange;
	da_igImStrlenW igImStrlenW;
	da_igImStreolRange igImStreolRange;
	da_igImStrbolW igImStrbolW;
	da_igImStristr igImStristr;
	da_igImStrTrimBlanks igImStrTrimBlanks;
	da_igImStrSkipBlank igImStrSkipBlank;
	da_igImFormatString igImFormatString;
	da_igImFormatStringV igImFormatStringV;
	da_igImParseFormatFindStart igImParseFormatFindStart;
	da_igImParseFormatFindEnd igImParseFormatFindEnd;
	da_igImParseFormatTrimDecorations igImParseFormatTrimDecorations;
	da_igImParseFormatPrecision igImParseFormatPrecision;
	da_igImCharIsBlankA igImCharIsBlankA;
	da_igImCharIsBlankW igImCharIsBlankW;
	da_igImTextStrToUtf8 igImTextStrToUtf8;
	da_igImTextCharFromUtf8 igImTextCharFromUtf8;
	da_igImTextStrFromUtf8 igImTextStrFromUtf8;
	da_igImTextCountCharsFromUtf8 igImTextCountCharsFromUtf8;
	da_igImTextCountUtf8BytesFromChar igImTextCountUtf8BytesFromChar;
	da_igImTextCountUtf8BytesFromStr igImTextCountUtf8BytesFromStr;
	da_igImFileOpen igImFileOpen;
	da_igImFileClose igImFileClose;
	da_igImFileGetSize igImFileGetSize;
	da_igImFileRead igImFileRead;
	da_igImFileWrite igImFileWrite;
	da_igImFileLoadToMemory igImFileLoadToMemory;
	da_igImPowFloat igImPowFloat;
	da_igImPowdouble igImPowdouble;
	da_igImLogFloat igImLogFloat;
	da_igImLogdouble igImLogdouble;
	da_igImAbsFloat igImAbsFloat;
	da_igImAbsdouble igImAbsdouble;
	da_igImSignFloat igImSignFloat;
	da_igImSigndouble igImSigndouble;
	da_igImMin igImMin;
	da_igImMax igImMax;
	da_igImClamp igImClamp;
	da_igImLerpVec2Float igImLerpVec2Float;
	da_igImLerpVec2Vec2 igImLerpVec2Vec2;
	da_igImLerpVec4 igImLerpVec4;
	da_igImSaturate igImSaturate;
	da_igImLengthSqrVec2 igImLengthSqrVec2;
	da_igImLengthSqrVec4 igImLengthSqrVec4;
	da_igImInvLength igImInvLength;
	da_igImFloorFloat igImFloorFloat;
	da_igImFloorVec2 igImFloorVec2;
	da_igImModPositive igImModPositive;
	da_igImDot igImDot;
	da_igImRotate igImRotate;
	da_igImLinearSweep igImLinearSweep;
	da_igImMul igImMul;
	da_igImBezierCalc igImBezierCalc;
	da_igImBezierClosestPoint igImBezierClosestPoint;
	da_igImBezierClosestPointCasteljau igImBezierClosestPointCasteljau;
	da_igImLineClosestPoint igImLineClosestPoint;
	da_igImTriangleContainsPoint igImTriangleContainsPoint;
	da_igImTriangleClosestPoint igImTriangleClosestPoint;
	da_igImTriangleBarycentricCoords igImTriangleBarycentricCoords;
	da_igImTriangleArea igImTriangleArea;
	da_igImGetDirQuadrantFromDelta igImGetDirQuadrantFromDelta;
	da_ImVec1_ImVec1Nil ImVec1_ImVec1Nil;
	da_ImVec1_destroy ImVec1_destroy;
	da_ImVec1_ImVec1Float ImVec1_ImVec1Float;
	da_ImVec2ih_ImVec2ihNil ImVec2ih_ImVec2ihNil;
	da_ImVec2ih_destroy ImVec2ih_destroy;
	da_ImVec2ih_ImVec2ihshort ImVec2ih_ImVec2ihshort;
	da_ImVec2ih_ImVec2ihVec2 ImVec2ih_ImVec2ihVec2;
	da_ImRect_ImRectNil ImRect_ImRectNil;
	da_ImRect_destroy ImRect_destroy;
	da_ImRect_ImRectVec2 ImRect_ImRectVec2;
	da_ImRect_ImRectVec4 ImRect_ImRectVec4;
	da_ImRect_ImRectFloat ImRect_ImRectFloat;
	da_ImRect_GetCenter ImRect_GetCenter;
	da_ImRect_GetSize ImRect_GetSize;
	da_ImRect_GetWidth ImRect_GetWidth;
	da_ImRect_GetHeight ImRect_GetHeight;
	da_ImRect_GetTL ImRect_GetTL;
	da_ImRect_GetTR ImRect_GetTR;
	da_ImRect_GetBL ImRect_GetBL;
	da_ImRect_GetBR ImRect_GetBR;
	da_ImRect_ContainsVec2 ImRect_ContainsVec2;
	da_ImRect_ContainsRect ImRect_ContainsRect;
	da_ImRect_Overlaps ImRect_Overlaps;
	da_ImRect_AddVec2 ImRect_AddVec2;
	da_ImRect_AddRect ImRect_AddRect;
	da_ImRect_ExpandFloat ImRect_ExpandFloat;
	da_ImRect_ExpandVec2 ImRect_ExpandVec2;
	da_ImRect_Translate ImRect_Translate;
	da_ImRect_TranslateX ImRect_TranslateX;
	da_ImRect_TranslateY ImRect_TranslateY;
	da_ImRect_ClipWith ImRect_ClipWith;
	da_ImRect_ClipWithFull ImRect_ClipWithFull;
	da_ImRect_Floor ImRect_Floor;
	da_ImRect_IsInverted ImRect_IsInverted;
	da_ImRect_ToVec4 ImRect_ToVec4;
	da_igImBitArrayTestBit igImBitArrayTestBit;
	da_igImBitArrayClearBit igImBitArrayClearBit;
	da_igImBitArraySetBit igImBitArraySetBit;
	da_igImBitArraySetBitRange igImBitArraySetBitRange;
	da_ImBitVector_Create ImBitVector_Create;
	da_ImBitVector_Clear ImBitVector_Clear;
	da_ImBitVector_TestBit ImBitVector_TestBit;
	da_ImBitVector_SetBit ImBitVector_SetBit;
	da_ImBitVector_ClearBit ImBitVector_ClearBit;
	da_ImDrawListSharedData_ImDrawListSharedData ImDrawListSharedData_ImDrawListSharedData;
	da_ImDrawListSharedData_destroy ImDrawListSharedData_destroy;
	da_ImDrawListSharedData_SetCircleSegmentMaxError ImDrawListSharedData_SetCircleSegmentMaxError;
	da_ImDrawDataBuilder_Clear ImDrawDataBuilder_Clear;
	da_ImDrawDataBuilder_ClearFreeMemory ImDrawDataBuilder_ClearFreeMemory;
	da_ImDrawDataBuilder_FlattenIntoSingleLayer ImDrawDataBuilder_FlattenIntoSingleLayer;
	da_ImGuiStyleMod_ImGuiStyleModInt ImGuiStyleMod_ImGuiStyleModInt;
	da_ImGuiStyleMod_destroy ImGuiStyleMod_destroy;
	da_ImGuiStyleMod_ImGuiStyleModFloat ImGuiStyleMod_ImGuiStyleModFloat;
	da_ImGuiStyleMod_ImGuiStyleModVec2 ImGuiStyleMod_ImGuiStyleModVec2;
	da_ImGuiMenuColumns_ImGuiMenuColumns ImGuiMenuColumns_ImGuiMenuColumns;
	da_ImGuiMenuColumns_destroy ImGuiMenuColumns_destroy;
	da_ImGuiMenuColumns_Update ImGuiMenuColumns_Update;
	da_ImGuiMenuColumns_DeclColumns ImGuiMenuColumns_DeclColumns;
	da_ImGuiMenuColumns_CalcExtraSpace ImGuiMenuColumns_CalcExtraSpace;
	da_ImGuiInputTextState_ImGuiInputTextState ImGuiInputTextState_ImGuiInputTextState;
	da_ImGuiInputTextState_destroy ImGuiInputTextState_destroy;
	da_ImGuiInputTextState_ClearText ImGuiInputTextState_ClearText;
	da_ImGuiInputTextState_ClearFreeMemory ImGuiInputTextState_ClearFreeMemory;
	da_ImGuiInputTextState_GetUndoAvailCount ImGuiInputTextState_GetUndoAvailCount;
	da_ImGuiInputTextState_GetRedoAvailCount ImGuiInputTextState_GetRedoAvailCount;
	da_ImGuiInputTextState_OnKeyPressed ImGuiInputTextState_OnKeyPressed;
	da_ImGuiInputTextState_CursorAnimReset ImGuiInputTextState_CursorAnimReset;
	da_ImGuiInputTextState_CursorClamp ImGuiInputTextState_CursorClamp;
	da_ImGuiInputTextState_HasSelection ImGuiInputTextState_HasSelection;
	da_ImGuiInputTextState_ClearSelection ImGuiInputTextState_ClearSelection;
	da_ImGuiInputTextState_SelectAll ImGuiInputTextState_SelectAll;
	da_ImGuiPopupData_ImGuiPopupData ImGuiPopupData_ImGuiPopupData;
	da_ImGuiPopupData_destroy ImGuiPopupData_destroy;
	da_ImGuiNavMoveResult_ImGuiNavMoveResult ImGuiNavMoveResult_ImGuiNavMoveResult;
	da_ImGuiNavMoveResult_destroy ImGuiNavMoveResult_destroy;
	da_ImGuiNavMoveResult_Clear ImGuiNavMoveResult_Clear;
	da_ImGuiNextWindowData_ImGuiNextWindowData ImGuiNextWindowData_ImGuiNextWindowData;
	da_ImGuiNextWindowData_destroy ImGuiNextWindowData_destroy;
	da_ImGuiNextWindowData_ClearFlags ImGuiNextWindowData_ClearFlags;
	da_ImGuiNextItemData_ImGuiNextItemData ImGuiNextItemData_ImGuiNextItemData;
	da_ImGuiNextItemData_destroy ImGuiNextItemData_destroy;
	da_ImGuiNextItemData_ClearFlags ImGuiNextItemData_ClearFlags;
	da_ImGuiPtrOrIndex_ImGuiPtrOrIndexPtr ImGuiPtrOrIndex_ImGuiPtrOrIndexPtr;
	da_ImGuiPtrOrIndex_destroy ImGuiPtrOrIndex_destroy;
	da_ImGuiPtrOrIndex_ImGuiPtrOrIndexInt ImGuiPtrOrIndex_ImGuiPtrOrIndexInt;
	da_ImGuiColumnData_ImGuiColumnData ImGuiColumnData_ImGuiColumnData;
	da_ImGuiColumnData_destroy ImGuiColumnData_destroy;
	da_ImGuiColumns_ImGuiColumns ImGuiColumns_ImGuiColumns;
	da_ImGuiColumns_destroy ImGuiColumns_destroy;
	da_ImGuiColumns_Clear ImGuiColumns_Clear;
	da_ImGuiDockNode_ImGuiDockNode ImGuiDockNode_ImGuiDockNode;
	da_ImGuiDockNode_destroy ImGuiDockNode_destroy;
	da_ImGuiDockNode_IsRootNode ImGuiDockNode_IsRootNode;
	da_ImGuiDockNode_IsDockSpace ImGuiDockNode_IsDockSpace;
	da_ImGuiDockNode_IsFloatingNode ImGuiDockNode_IsFloatingNode;
	da_ImGuiDockNode_IsCentralNode ImGuiDockNode_IsCentralNode;
	da_ImGuiDockNode_IsHiddenTabBar ImGuiDockNode_IsHiddenTabBar;
	da_ImGuiDockNode_IsNoTabBar ImGuiDockNode_IsNoTabBar;
	da_ImGuiDockNode_IsSplitNode ImGuiDockNode_IsSplitNode;
	da_ImGuiDockNode_IsLeafNode ImGuiDockNode_IsLeafNode;
	da_ImGuiDockNode_IsEmpty ImGuiDockNode_IsEmpty;
	da_ImGuiDockNode_GetMergedFlags ImGuiDockNode_GetMergedFlags;
	da_ImGuiDockNode_Rect ImGuiDockNode_Rect;
	da_ImGuiDockContext_ImGuiDockContext ImGuiDockContext_ImGuiDockContext;
	da_ImGuiDockContext_destroy ImGuiDockContext_destroy;
	da_ImGuiViewportP_ImGuiViewportP ImGuiViewportP_ImGuiViewportP;
	da_ImGuiViewportP_destroy ImGuiViewportP_destroy;
	da_ImGuiViewportP_GetMainRect ImGuiViewportP_GetMainRect;
	da_ImGuiViewportP_GetWorkRect ImGuiViewportP_GetWorkRect;
	da_ImGuiViewportP_ClearRequestFlags ImGuiViewportP_ClearRequestFlags;
	da_ImGuiWindowSettings_ImGuiWindowSettings ImGuiWindowSettings_ImGuiWindowSettings;
	da_ImGuiWindowSettings_destroy ImGuiWindowSettings_destroy;
	da_ImGuiWindowSettings_GetName ImGuiWindowSettings_GetName;
	da_ImGuiSettingsHandler_ImGuiSettingsHandler ImGuiSettingsHandler_ImGuiSettingsHandler;
	da_ImGuiSettingsHandler_destroy ImGuiSettingsHandler_destroy;
	da_ImGuiContext_ImGuiContext ImGuiContext_ImGuiContext;
	da_ImGuiContext_destroy ImGuiContext_destroy;
	da_ImGuiWindowTempData_ImGuiWindowTempData ImGuiWindowTempData_ImGuiWindowTempData;
	da_ImGuiWindowTempData_destroy ImGuiWindowTempData_destroy;
	da_ImGuiWindow_ImGuiWindow ImGuiWindow_ImGuiWindow;
	da_ImGuiWindow_destroy ImGuiWindow_destroy;
	da_ImGuiWindow_GetIDStr ImGuiWindow_GetIDStr;
	da_ImGuiWindow_GetIDPtr ImGuiWindow_GetIDPtr;
	da_ImGuiWindow_GetIDInt ImGuiWindow_GetIDInt;
	da_ImGuiWindow_GetIDNoKeepAliveStr ImGuiWindow_GetIDNoKeepAliveStr;
	da_ImGuiWindow_GetIDNoKeepAlivePtr ImGuiWindow_GetIDNoKeepAlivePtr;
	da_ImGuiWindow_GetIDNoKeepAliveInt ImGuiWindow_GetIDNoKeepAliveInt;
	da_ImGuiWindow_GetIDFromRectangle ImGuiWindow_GetIDFromRectangle;
	da_ImGuiWindow_Rect ImGuiWindow_Rect;
	da_ImGuiWindow_CalcFontSize ImGuiWindow_CalcFontSize;
	da_ImGuiWindow_TitleBarHeight ImGuiWindow_TitleBarHeight;
	da_ImGuiWindow_TitleBarRect ImGuiWindow_TitleBarRect;
	da_ImGuiWindow_MenuBarHeight ImGuiWindow_MenuBarHeight;
	da_ImGuiWindow_MenuBarRect ImGuiWindow_MenuBarRect;
	da_ImGuiLastItemDataBackup_ImGuiLastItemDataBackup ImGuiLastItemDataBackup_ImGuiLastItemDataBackup;
	da_ImGuiLastItemDataBackup_destroy ImGuiLastItemDataBackup_destroy;
	da_ImGuiLastItemDataBackup_Backup ImGuiLastItemDataBackup_Backup;
	da_ImGuiLastItemDataBackup_Restore ImGuiLastItemDataBackup_Restore;
	da_ImGuiTabItem_ImGuiTabItem ImGuiTabItem_ImGuiTabItem;
	da_ImGuiTabItem_destroy ImGuiTabItem_destroy;
	da_ImGuiTabBar_ImGuiTabBar ImGuiTabBar_ImGuiTabBar;
	da_ImGuiTabBar_destroy ImGuiTabBar_destroy;
	da_ImGuiTabBar_GetTabOrder ImGuiTabBar_GetTabOrder;
	da_ImGuiTabBar_GetTabName ImGuiTabBar_GetTabName;
	da_igGetCurrentWindowRead igGetCurrentWindowRead;
	da_igGetCurrentWindow igGetCurrentWindow;
	da_igFindWindowByID igFindWindowByID;
	da_igFindWindowByName igFindWindowByName;
	da_igUpdateWindowParentAndRootLinks igUpdateWindowParentAndRootLinks;
	da_igCalcWindowExpectedSize igCalcWindowExpectedSize;
	da_igIsWindowChildOf igIsWindowChildOf;
	da_igIsWindowNavFocusable igIsWindowNavFocusable;
	da_igGetWindowAllowedExtentRect igGetWindowAllowedExtentRect;
	da_igSetWindowPosWindowPtr igSetWindowPosWindowPtr;
	da_igSetWindowSizeWindowPtr igSetWindowSizeWindowPtr;
	da_igSetWindowCollapsedWindowPtr igSetWindowCollapsedWindowPtr;
	da_igSetWindowHitTestHole igSetWindowHitTestHole;
	da_igFocusWindow igFocusWindow;
	da_igFocusTopMostWindowUnderOne igFocusTopMostWindowUnderOne;
	da_igBringWindowToFocusFront igBringWindowToFocusFront;
	da_igBringWindowToDisplayFront igBringWindowToDisplayFront;
	da_igBringWindowToDisplayBack igBringWindowToDisplayBack;
	da_igSetCurrentFont igSetCurrentFont;
	da_igGetDefaultFont igGetDefaultFont;
	da_igGetForegroundDrawListWindowPtr igGetForegroundDrawListWindowPtr;
	da_igInitialize igInitialize;
	da_igShutdown igShutdown;
	da_igUpdateHoveredWindowAndCaptureFlags igUpdateHoveredWindowAndCaptureFlags;
	da_igStartMouseMovingWindow igStartMouseMovingWindow;
	da_igStartMouseMovingWindowOrNode igStartMouseMovingWindowOrNode;
	da_igUpdateMouseMovingWindowNewFrame igUpdateMouseMovingWindowNewFrame;
	da_igUpdateMouseMovingWindowEndFrame igUpdateMouseMovingWindowEndFrame;
	da_igTranslateWindowsInViewport igTranslateWindowsInViewport;
	da_igScaleWindowsInViewport igScaleWindowsInViewport;
	da_igDestroyPlatformWindow igDestroyPlatformWindow;
	da_igShowViewportThumbnails igShowViewportThumbnails;
	da_igMarkIniSettingsDirtyNil igMarkIniSettingsDirtyNil;
	da_igMarkIniSettingsDirtyWindowPtr igMarkIniSettingsDirtyWindowPtr;
	da_igClearIniSettings igClearIniSettings;
	da_igCreateNewWindowSettings igCreateNewWindowSettings;
	da_igFindWindowSettings igFindWindowSettings;
	da_igFindOrCreateWindowSettings igFindOrCreateWindowSettings;
	da_igFindSettingsHandler igFindSettingsHandler;
	da_igSetNextWindowScroll igSetNextWindowScroll;
	da_igSetScrollXWindowPtr igSetScrollXWindowPtr;
	da_igSetScrollYWindowPtr igSetScrollYWindowPtr;
	da_igSetScrollFromPosXWindowPtr igSetScrollFromPosXWindowPtr;
	da_igSetScrollFromPosYWindowPtr igSetScrollFromPosYWindowPtr;
	da_igScrollToBringRectIntoView igScrollToBringRectIntoView;
	da_igGetItemID igGetItemID;
	da_igGetItemStatusFlags igGetItemStatusFlags;
	da_igGetActiveID igGetActiveID;
	da_igGetFocusID igGetFocusID;
	da_igSetActiveID igSetActiveID;
	da_igSetFocusID igSetFocusID;
	da_igClearActiveID igClearActiveID;
	da_igGetHoveredID igGetHoveredID;
	da_igSetHoveredID igSetHoveredID;
	da_igKeepAliveID igKeepAliveID;
	da_igMarkItemEdited igMarkItemEdited;
	da_igPushOverrideID igPushOverrideID;
	da_igItemSizeVec2 igItemSizeVec2;
	da_igItemSizeRect igItemSizeRect;
	da_igItemAdd igItemAdd;
	da_igItemHoverable igItemHoverable;
	da_igIsClippedEx igIsClippedEx;
	da_igSetLastItemData igSetLastItemData;
	da_igFocusableItemRegister igFocusableItemRegister;
	da_igFocusableItemUnregister igFocusableItemUnregister;
	da_igCalcItemSize igCalcItemSize;
	da_igCalcWrapWidthForPos igCalcWrapWidthForPos;
	da_igPushMultiItemsWidths igPushMultiItemsWidths;
	da_igPushItemFlag igPushItemFlag;
	da_igPopItemFlag igPopItemFlag;
	da_igIsItemToggledSelection igIsItemToggledSelection;
	da_igGetContentRegionMaxAbs igGetContentRegionMaxAbs;
	da_igShrinkWidths igShrinkWidths;
	da_igLogBegin igLogBegin;
	da_igLogToBuffer igLogToBuffer;
	da_igBeginChildEx igBeginChildEx;
	da_igOpenPopupEx igOpenPopupEx;
	da_igClosePopupToLevel igClosePopupToLevel;
	da_igClosePopupsOverWindow igClosePopupsOverWindow;
	da_igIsPopupOpenID igIsPopupOpenID;
	da_igBeginPopupEx igBeginPopupEx;
	da_igBeginTooltipEx igBeginTooltipEx;
	da_igGetTopMostPopupModal igGetTopMostPopupModal;
	da_igFindBestWindowPosForPopup igFindBestWindowPosForPopup;
	da_igFindBestWindowPosForPopupEx igFindBestWindowPosForPopupEx;
	da_igNavInitWindow igNavInitWindow;
	da_igNavMoveRequestButNoResultYet igNavMoveRequestButNoResultYet;
	da_igNavMoveRequestCancel igNavMoveRequestCancel;
	da_igNavMoveRequestForward igNavMoveRequestForward;
	da_igNavMoveRequestTryWrapping igNavMoveRequestTryWrapping;
	da_igGetNavInputAmount igGetNavInputAmount;
	da_igGetNavInputAmount2d igGetNavInputAmount2d;
	da_igCalcTypematicRepeatAmount igCalcTypematicRepeatAmount;
	da_igActivateItem igActivateItem;
	da_igSetNavID igSetNavID;
	da_igSetNavIDWithRectRel igSetNavIDWithRectRel;
	da_igPushFocusScope igPushFocusScope;
	da_igPopFocusScope igPopFocusScope;
	da_igGetFocusScopeID igGetFocusScopeID;
	da_igIsActiveIdUsingNavDir igIsActiveIdUsingNavDir;
	da_igIsActiveIdUsingNavInput igIsActiveIdUsingNavInput;
	da_igIsActiveIdUsingKey igIsActiveIdUsingKey;
	da_igIsMouseDragPastThreshold igIsMouseDragPastThreshold;
	da_igIsKeyPressedMap igIsKeyPressedMap;
	da_igIsNavInputDown igIsNavInputDown;
	da_igIsNavInputTest igIsNavInputTest;
	da_igGetMergedKeyModFlags igGetMergedKeyModFlags;
	da_igDockContextInitialize igDockContextInitialize;
	da_igDockContextShutdown igDockContextShutdown;
	da_igDockContextClearNodes igDockContextClearNodes;
	da_igDockContextRebuildNodes igDockContextRebuildNodes;
	da_igDockContextUpdateUndocking igDockContextUpdateUndocking;
	da_igDockContextUpdateDocking igDockContextUpdateDocking;
	da_igDockContextGenNodeID igDockContextGenNodeID;
	da_igDockContextQueueDock igDockContextQueueDock;
	da_igDockContextQueueUndockWindow igDockContextQueueUndockWindow;
	da_igDockContextQueueUndockNode igDockContextQueueUndockNode;
	da_igDockContextCalcDropPosForDocking igDockContextCalcDropPosForDocking;
	da_igDockNodeGetRootNode igDockNodeGetRootNode;
	da_igDockNodeGetDepth igDockNodeGetDepth;
	da_igGetWindowDockNode igGetWindowDockNode;
	da_igGetWindowAlwaysWantOwnTabBar igGetWindowAlwaysWantOwnTabBar;
	da_igBeginDocked igBeginDocked;
	da_igBeginDockableDragDropSource igBeginDockableDragDropSource;
	da_igBeginDockableDragDropTarget igBeginDockableDragDropTarget;
	da_igSetWindowDock igSetWindowDock;
	da_igDockBuilderDockWindow igDockBuilderDockWindow;
	da_igDockBuilderGetNode igDockBuilderGetNode;
	da_igDockBuilderGetCentralNode igDockBuilderGetCentralNode;
	da_igDockBuilderAddNode igDockBuilderAddNode;
	da_igDockBuilderRemoveNode igDockBuilderRemoveNode;
	da_igDockBuilderRemoveNodeDockedWindows igDockBuilderRemoveNodeDockedWindows;
	da_igDockBuilderRemoveNodeChildNodes igDockBuilderRemoveNodeChildNodes;
	da_igDockBuilderSetNodePos igDockBuilderSetNodePos;
	da_igDockBuilderSetNodeSize igDockBuilderSetNodeSize;
	da_igDockBuilderSplitNode igDockBuilderSplitNode;
	da_igDockBuilderCopyDockSpace igDockBuilderCopyDockSpace;
	da_igDockBuilderCopyNode igDockBuilderCopyNode;
	da_igDockBuilderCopyWindowSettings igDockBuilderCopyWindowSettings;
	da_igDockBuilderFinish igDockBuilderFinish;
	da_igBeginDragDropTargetCustom igBeginDragDropTargetCustom;
	da_igClearDragDrop igClearDragDrop;
	da_igIsDragDropPayloadBeingAccepted igIsDragDropPayloadBeingAccepted;
	da_igSetWindowClipRectBeforeSetChannel igSetWindowClipRectBeforeSetChannel;
	da_igBeginColumns igBeginColumns;
	da_igEndColumns igEndColumns;
	da_igPushColumnClipRect igPushColumnClipRect;
	da_igPushColumnsBackground igPushColumnsBackground;
	da_igPopColumnsBackground igPopColumnsBackground;
	da_igGetColumnsID igGetColumnsID;
	da_igFindOrCreateColumns igFindOrCreateColumns;
	da_igGetColumnOffsetFromNorm igGetColumnOffsetFromNorm;
	da_igGetColumnNormFromOffset igGetColumnNormFromOffset;
	da_igBeginTabBarEx igBeginTabBarEx;
	da_igTabBarFindTabByID igTabBarFindTabByID;
	da_igTabBarFindMostRecentlySelectedTabForActiveWindow igTabBarFindMostRecentlySelectedTabForActiveWindow;
	da_igTabBarAddTab igTabBarAddTab;
	da_igTabBarRemoveTab igTabBarRemoveTab;
	da_igTabBarCloseTab igTabBarCloseTab;
	da_igTabBarQueueChangeTabOrder igTabBarQueueChangeTabOrder;
	da_igTabItemEx igTabItemEx;
	da_igTabItemCalcSize igTabItemCalcSize;
	da_igTabItemBackground igTabItemBackground;
	da_igTabItemLabelAndCloseButton igTabItemLabelAndCloseButton;
	da_igRenderText igRenderText;
	da_igRenderTextWrapped igRenderTextWrapped;
	da_igRenderTextClipped igRenderTextClipped;
	da_igRenderTextClippedEx igRenderTextClippedEx;
	da_igRenderTextEllipsis igRenderTextEllipsis;
	da_igRenderFrame igRenderFrame;
	da_igRenderFrameBorder igRenderFrameBorder;
	da_igRenderColorRectWithAlphaCheckerboard igRenderColorRectWithAlphaCheckerboard;
	da_igRenderNavHighlight igRenderNavHighlight;
	da_igFindRenderedTextEnd igFindRenderedTextEnd;
	da_igLogRenderedText igLogRenderedText;
	da_igRenderArrow igRenderArrow;
	da_igRenderBullet igRenderBullet;
	da_igRenderCheckMark igRenderCheckMark;
	da_igRenderMouseCursor igRenderMouseCursor;
	da_igRenderArrowPointingAt igRenderArrowPointingAt;
	da_igRenderArrowDockMenu igRenderArrowDockMenu;
	da_igRenderRectFilledRangeH igRenderRectFilledRangeH;
	da_igRenderRectFilledWithHole igRenderRectFilledWithHole;
	da_igTextEx igTextEx;
	da_igButtonEx igButtonEx;
	da_igCloseButton igCloseButton;
	da_igCollapseButton igCollapseButton;
	da_igArrowButtonEx igArrowButtonEx;
	da_igScrollbar igScrollbar;
	da_igScrollbarEx igScrollbarEx;
	da_igImageButtonEx igImageButtonEx;
	da_igGetWindowScrollbarRect igGetWindowScrollbarRect;
	da_igGetWindowScrollbarID igGetWindowScrollbarID;
	da_igGetWindowResizeID igGetWindowResizeID;
	da_igSeparatorEx igSeparatorEx;
	da_igButtonBehavior igButtonBehavior;
	da_igDragBehavior igDragBehavior;
	da_igSliderBehavior igSliderBehavior;
	da_igSplitterBehavior igSplitterBehavior;
	da_igTreeNodeBehavior igTreeNodeBehavior;
	da_igTreeNodeBehaviorIsOpen igTreeNodeBehaviorIsOpen;
	da_igTreePushOverrideID igTreePushOverrideID;
	da_igDataTypeGetInfo igDataTypeGetInfo;
	da_igDataTypeFormatString igDataTypeFormatString;
	da_igDataTypeApplyOp igDataTypeApplyOp;
	da_igDataTypeApplyOpFromText igDataTypeApplyOpFromText;
	da_igDataTypeClamp igDataTypeClamp;
	da_igInputTextEx igInputTextEx;
	da_igTempInputText igTempInputText;
	da_igTempInputScalar igTempInputScalar;
	da_igTempInputIsActive igTempInputIsActive;
	da_igGetInputTextState igGetInputTextState;
	da_igColorTooltip igColorTooltip;
	da_igColorEditOptionsPopup igColorEditOptionsPopup;
	da_igColorPickerOptionsPopup igColorPickerOptionsPopup;
	da_igPlotEx igPlotEx;
	da_igShadeVertsLinearColorGradientKeepAlpha igShadeVertsLinearColorGradientKeepAlpha;
	da_igShadeVertsLinearUV igShadeVertsLinearUV;
	da_igGcCompactTransientWindowBuffers igGcCompactTransientWindowBuffers;
	da_igGcAwakeTransientWindowBuffers igGcAwakeTransientWindowBuffers;
	da_igDebugDrawItemRect igDebugDrawItemRect;
	da_igDebugStartItemPicker igDebugStartItemPicker;
	da_igImFontAtlasBuildWithStbTruetype igImFontAtlasBuildWithStbTruetype;
	da_igImFontAtlasBuildInit igImFontAtlasBuildInit;
	da_igImFontAtlasBuildSetupFont igImFontAtlasBuildSetupFont;
	da_igImFontAtlasBuildPackCustomRects igImFontAtlasBuildPackCustomRects;
	da_igImFontAtlasBuildFinish igImFontAtlasBuildFinish;
	da_igImFontAtlasBuildRender1bppRectFromString igImFontAtlasBuildRender1bppRectFromString;
	da_igImFontAtlasBuildMultiplyCalcLookupTable igImFontAtlasBuildMultiplyCalcLookupTable;
	da_igImFontAtlasBuildMultiplyRectAlpha8 igImFontAtlasBuildMultiplyRectAlpha8;
	da_igLogText igLogText;
	da_ImGuiTextBuffer_appendf ImGuiTextBuffer_appendf;
	da_igGET_FLT_MAX igGET_FLT_MAX;
	da_ImVector_ImWchar_create ImVector_ImWchar_create;
	da_ImVector_ImWchar_destroy ImVector_ImWchar_destroy;
	da_ImVector_ImWchar_Init ImVector_ImWchar_Init;
	da_ImVector_ImWchar_UnInit ImVector_ImWchar_UnInit;
}